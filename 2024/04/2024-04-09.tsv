title	url	points	by	hnId	dot
How much faster are the Gnome 46 terminals?	https://bxt.rs/blog/just-how-much-faster-are-the-gnome-46-terminals/	473	janvdberg	39966918	digraph GNOME_Terminals{rankdir=LR;node[shape=box, style=filled, color=lightblue];edge[color=grey];"Performance Improvements"[label="Performance\nImprovements", fillcolor=lightgreen];"VTE Library"[label="VTE Library", fillcolor=lightyellow];"Input Latency"[label="Input Latency"];"Testing Methods"[label="Testing Methods", fillcolor=lightcoral];"Benchmark Results"[label="Benchmark Results", fillcolor=lightpink]; "VTE Library"->{"GNOME Terminal", "Console", "Black Box", "Tilix", "Terminator", "Ptyxis", "Builder", "Workbench"}[label="powers"]; "Performance Improvements"->"VTE Library"[label="targeted"];"Performance Improvements"->"Input Latency"[label="reduced"]; "Testing Methods"->{"Typometer", "Hardware Latency Tester", "vtebench"}[label="includes"];"Hardware Latency Tester"->"End-to-End Latency"[label="measures"]; "Benchmark Results"->{"Simple Input Test", "Neovim Setup Test", "VTEbench Results"}[label="show"];"Simple Input Test"->"Latency Comparison"[label="Alacritty vs. VTE"];"Neovim Setup Test"->"Latency Comparison";"VTEbench Results"->"Parsing Performance"; "Input Latency"->"User Experience"[label="affects"];"VTEbench Results"->"VTE Improvements"[label="reflects"]; "Conclusion"[label="Try VTE 0.76 for\nReduced Latency", fillcolor=lightgreen];"Performance Improvements"->"Conclusion";"Benchmark Results"->"Conclusion";}
Llm.c – LLM training in simple, pure C/CUDA	https://github.com/karpathy/llm.c	420	tosh	39973467	digraph G{node[shape=box, style="rounded,filled", fillcolor="#E6E6FA"];edge[color="#6A5ACD", style=dashed];repo[label="llm.c Repo", fillcolor="#DDA0DD"];gpt2[label="GPT-2/3 Series", fillcolor="#DDA0DD"];training[label="Training", fillcolor="#DDA0DD"];datasets[label="Datasets", fillcolor="#DDA0DD"];testing[label="Testing", fillcolor="#DDA0DD"];forks[label="Notable Forks", fillcolor="#DDA0DD"];discussions[label="Discussions", fillcolor="#DDA0DD"];repo->{gpt2 training datasets testing forks discussions};gpt2->{cuda_c c_cpu cuda_fp32};cuda_c[label="CUDA Implementation"];c_cpu[label="CPU Implementation"];cuda_fp32[label="CUDA FP32 (Legacy)"]; training->{single_gpu multi_gpu multi_node};single_gpu[label="Single GPU"];multi_gpu[label="Multi GPU"];multi_node[label="Multi Node"]; datasets->{download tokenize};download[label="Download"];tokenize[label="Tokenize"]; testing->{unit_tests};unit_tests[label="Unit Tests"]; forks->{amd_support csharp cpp cuda_cpp webgpu_cpp go java metal mojo opencl rust swift zig};amd_support[label="AMD Support"];csharp[label="C#"];cpp[label="C++"];cuda_cpp[label="CUDA C++"];webgpu_cpp[label="WebGPU C++"];go[label="Go"];java[label="Java"];metal[label="Metal"];mojo[label="Mojo"];opencl[label="OpenCL"];rust[label="Rust"];swift[label="Swift"];zig[label="Zig"]; discussions->{issues pr chat discord};issues[label="Issues"];pr[label="Pull Requests"];chat[label="Chat"];discord[label="Discord"]; license[label="MIT License", shape=note, fillcolor="#FFD700"];repo->license;tutorial[label="LayerNorm Tutorial", shape=note, fillcolor="#98FB98"];repo->tutorial;}
Lore Harp McGovern built a microcomputer empire from her suburban home	https://every.to/the-crazy-ones/the-woman-that-tech-history-forgot	354	adrianhon	39970915	digraph LoreHarpMcGovern{node[shape=box, style=filled, color=lightblue];Lore[label="Lore Harp McGovern"];VectorGraphic[label="Vector Graphic"];CaroleEly[label="Carole Ely"];BobHarp[label="Bob Harp"];SiliconValley[label="Silicon Valley"];PersonalComputing[label="Personal Computing"];IBM[label="IBM"];IPO[label="IPO"];Business[label="Business Market"];Homebrew[label="Hobbyist Market"];Vector1[label="Vector 1"];Vector4[label="Vector 4"];Bankruptcy[label="Bankruptcy"];McGovernInstitute[label="McGovern Institute at MIT"];Legacy[label="Legacy"];Challenges[label="Challenges"];Success[label="Success"];Failure[label="Failure"];Investment[label="Investment"];Lore->VectorGraphic[label="Founded"];Lore->CaroleEly[label="Partnership"];VectorGraphic->BobHarp[label="Joined"];VectorGraphic->SiliconValley[label="Part of"];VectorGraphic->PersonalComputing[label="Influenced"];VectorGraphic->Business[label="Targeted"];VectorGraphic->Homebrew[label="Also Targeted"];VectorGraphic->IPO[label="Went Public"];VectorGraphic->Vector1[label="Released"];VectorGraphic->Vector4[label="Released"];VectorGraphic->IBM[label="Competed with"];VectorGraphic->Bankruptcy[label="Ended in"];Lore->McGovernInstitute[label="Endowed"];Lore->Investment[label="Engaged in"];VectorGraphic->Success[label="Achieved"];VectorGraphic->Challenges[label="Faced"];VectorGraphic->Failure[label="Resulted in"];Lore->Legacy[label="Left Behind"];graph[rankdir=TB, label="Lore Harp McGovern's Journey in Silicon Valley", labelloc="t", fontsize=20];node[fontsize=12];edge[fontsize=10];}
Spotify demonetizes all tracks under 1k streams	https://djmag.com/news/spotify-officially-demonetises-all-tracks-under-1000-streams	332	buro9	39966743	digraph Spotify_Royalty_Changes{rankdir=TB;node[shape=box, style=filled, color=lightblue, fontname="Arial"];edge[color=lightcoral];Spotify[label="Spotify", fillcolor="#4CAF50"];RoyaltyPolicy[label="New Royalty Policy", fillcolor="#FF9800"];Threshold[label="1,000 Stream Threshold", fillcolor="#FFC107"];RevenueScheme[label="Revised Revenue Scheme", fillcolor="#00BCD4"];StreamManipulation[label="Stream Manipulation", fillcolor="#E91E63"];FunctionalGenres[label="Functional Genres", fillcolor="#9E9E9E"];IndustryResponse[label="Industry Response", fillcolor="#795548"];ArtistInitiative[label="Make Streaming Pay", fillcolor="#673AB7"];PricingStrategy[label="Pricing Strategy", fillcolor="#F44336"];Spotify->RoyaltyPolicy[label="Introduced"];RoyaltyPolicy->Threshold[label="Requirement"];RoyaltyPolicy->RevenueScheme[label="Affects"];RoyaltyPolicy->StreamManipulation[label="Targets"];RoyaltyPolicy->FunctionalGenres[label="Affects"];Spotify->PricingStrategy[label="Adjusts"];IndustryResponse->RoyaltyPolicy[label="Criticizes"];IndustryResponse->ArtistInitiative[label="Supports"];ArtistInitiative->RoyaltyPolicy[label="Opposes"];ArtistInitiative->Spotify[label="Campaigns Against"];PricingStrategy->Spotify[label="To Cover Shortfalls"];PricingStrategy->"Increase Pricing"[label="Action"];"Increase Pricing"->"Audiobooks"[label="To Include"];"Increase Pricing"->"Basic Tier"[label="Introduces"];"Increase Pricing"->"Share Value Increase"[label="Result"];{rank=same;Spotify IndustryResponse}{rank=same;RevenueScheme StreamManipulation}{rank=same;FunctionalGenres ArtistInitiative}{rank=same;Threshold PricingStrategy}}
Notepad++: Help us to take down the parasite website	https://notepad-plus-plus.org/news/help-to-take-down-parasite-site/	326	croes	39968761	digraph NotepadPlusPlusIssue{rankdir=TB;node[shape=box, style=filled, fontname="Arial", fontsize=10];edge[fontname="Arial", fontsize=8];NotepadPlusPlus[label="Notepad++ Official\nnotepad-plus-plus.org", fillcolor="#e6f3ff"];CopycatSite[label="Copycat Site\nnotepad.plus", fillcolor="#ffcccc"];Users[label="Users", fillcolor="#e6ffe6"];Google[label="Google Search", fillcolor="#ffffe6"];MaliciousAds[label="Malicious Ads", fillcolor="#ff9999"];ReportSite[label="Report Site", fillcolor="#ff9999", URL="https://safebrowsing.google.com/safebrowsing/report_badware/?hl=en"]; Google->NotepadPlusPlus[label="Search Results"];Google->CopycatSite[label="Search Results\n(Confusing)"]; CopycatSite->MaliciousAds[label="Contains"];Users->Google[label="Search for\nNotepad++"]; Users->CopycatSite[label="Mistakenly Visit"];CopycatSite->Users[label="Potential Security\nRisks"]; Users->ReportSite[label="Report Malicious Site"];ReportSite->CopycatSite[label="Action Against"];{rank=same;Google CopycatSite NotepadPlusPlus} labelloc="t";label="Notepad++ Community Safety - Report Malicious Site";fontsize=14;fontname="Arial";node[shape=plaintext];overview[label="Users are misled by a copycat site when searching for Notepad++ on Google,\nleading to potential security risks. Action is needed to report this site."];}
Vala Programming Language	https://vala.dev/	226	gtirloni	39969131	digraph ValaOverview{rankdir=LR;node[shape=box, style=filled, color=lightblue2];edge[color=grey];Vala[label="Vala\nProgramming Language", fillcolor=darkseagreen];Productivity[label="Productivity"];Performance[label="Performance"];OpenSource[label="Open Source"];Community[label="Community"];Showcase[label="Showcase"];WhatCanBuild[label="What can you build?"];Productivity->{ObjectOriented, Integration};Performance->{NativeBinaries, CIntegration};OpenSource->{FreeSoftware, CommunityContributions};Community->{Forums, InternalsChat, Discord};Showcase->{"GUI Apps", "Command Line", "Libraries", "Tuba", "Workbench", "Dino", "Monitor", "TextSnatcher", "Timeshift"};WhatCanBuild->{"GUI Applications", "Command Line Programs", "Libraries"};Vala->Productivity[label="Offers"];Vala->Performance[label="Provides"];Vala->OpenSource[label="Is"];Vala->Community[label="Supported by"];Vala->Showcase[label="Exemplified by"];Vala->WhatCanBuild[label="Capabilities"];Forums->Community;InternalsChat->Community;Discord->Community;Vala->"Get Started"[style=dashed, color=purple];Vala->"View Source Code"[style=dashed, color=purple];}
After AI beat them, professional Go players got better and more creative	https://www.henrikkarlsson.xyz/p/go	226	iNic	39972990	digraph G{graph[fontname="Helvetica,Arial,sans-serif", rankdir=LR];node[fontname="Helvetica,Arial,sans-serif"];edge[fontname="Helvetica,Arial,sans-serif"];AI[label="AI (AlphaGo)", shape=box, style=filled, fillcolor="#ff9999"];GoPlayers[label="Professional Go Players", shape=ellipse, style=filled, fillcolor="#99ccff"];Creativity[label="Creativity", shape=hexagon, style=filled, fillcolor="#99ff99"];SkillImprovement[label="Skill Improvement", shape=hexagon, style=filled, fillcolor="#ffcc99"];OpenSource[label="Open Source\nLeela Zero", shape=box, style=filled, fillcolor="#ffff99"];Reasoning[label="Reasoning Tools", shape=octagon, style=filled, fillcolor="#ff99ff"];MassInput[label="Massive Input\nLearning", shape=octagon, style=filled, fillcolor="#cc99ff"];AI->GoPlayers[label=" Defeats", color="#ff0000"];GoPlayers->SkillImprovement[label=" Improves"];GoPlayers->Creativity[label=" Enhances"];OpenSource->GoPlayers[label=" Facilitates"];OpenSource->Reasoning[label=" Enables"];OpenSource->MassInput[label=" Supports"];Reasoning->GoPlayers[label=" Guides"];MassInput->GoPlayers[label=" Accelerates"];subgraph cluster0{label="Detailed Process";color="#808080";GoPlayers->Reevaluate[label=" Reevaluate Moves"];Reevaluate->AbandonHeuristics[label=" Abandon"];AbandonHeuristics->Creativity;}node[fontsize=8];edge[fontsize=8];ranksep=0.2;nodesep=0.1;Legend[label="Legend:\nBox = AI/Tools\nEllipse = People\nHexagon = Outcomes\nOctagon = Processes", shape=note, style=filled, fillcolor="#f0f0f0", fontsize=6];}
Hello World	https://thecoder08.github.io/hello-world.html	211	fbrusch	39967709	digraph HelloWorld{rankdir=LR;node[shape=box, style=filled, color=lightblue];edge[color=red];subgraph cluster_program{label="C Program";node[shape=note];start[label="Program Start"];main[label="main()"];printf[label="printf()"];}subgraph cluster_compiler{label="Compiler & Linker";node[shape=box3d];compile[label="Compile"];link[label="Link"];}subgraph cluster_machine_code{label="Machine Code";node[shape=box];elf[label="ELF Executable"];entry_point[label="Entry Point\n0x1060"];}subgraph cluster_library{label="C Library (glibc/musl)";node[shape=component];libc[label="libc.so.6"];puts[label="puts()"];write[label="write()"];system_call[label="System Call"];}subgraph cluster_kernel{label="Kernel";node[shape=cylinder];kernel_write[label="write()\nSystem Call"];}subgraph cluster_output{label="Output";node[shape=ellipse, style=filled, color=lightgreen];display[label="Display"];}start->compile->elf->entry_point->libc;libc->puts->write->system_call->kernel_write->display;main->printf->puts;printf->puts[label="Optimized to"];}
Blocky – a DNS proxy and ad-blocker for the local network	https://0xerr0r.github.io/blocky/	202	kaathewise	39968103	digraph Blocky{node[shape=box, style=filled, color=lightblue, fontname="Arial", fontsize=10];edge[color=gray, fontname="Arial", fontsize=8];Blocky[label="Blocky\n(DNS Proxy & Ad-blocker)", fillcolor="#87CEFA", shape=oval]; features[label="Features", fillcolor="#ADD8E6"];performance[label="Performance\n🚀", fillcolor="#FFB6C1"];security[label="Security &\nPrivacy 🕶", fillcolor="#98FB98"];integration[label="Integration 📔", fillcolor="#DDA0DD"];protocols[label="Protocols 💻", fillcolor="#FFDEAD"];advancedDNS[label="Advanced DNS\nConfiguration 🤓", fillcolor="#FFA07A"];blocking[label="Blocking ⛔", fillcolor="#F0E68C"];simpleConfig[label="Simple\nConfiguration 👶", fillcolor="#90EE90"];simpleInstall[label="Simple\nInstallation ☁", fillcolor="#FFEC8B"];Blocky->features;features->{blocking, advancedDNS, performance, protocols, security, integration, simpleConfig, simpleInstall}; blocking->"External Lists";blocking->"Client Groups";blocking->"Regex Support"; advancedDNS->"Custom DNS Resolution";advancedDNS->"Conditional Forwarding";advancedDNS->"Upstream Resolvers"; performance->"DNS Caching";performance->"Prefetching";performance->"Multiple Resolvers"; protocols->"DNS over UDP/TCP";protocols->"DNS over HTTPS (DoH)";protocols->"DNS over TLS (DoT)"; security->"DNSSEC, eDNS";security->"Configurable Blocking";security->"Random Upstream";security->"Open Source"; integration->"Prometheus Metrics";integration->"Grafana Dashboards";integration->"Logging";integration->"REST API";integration->"CLI Tool"; simpleConfig->"YAML File";simpleInstall->"Docker Image";simpleInstall->"Single Binary";simpleInstall->"Stateless";contribution[label="Contribution on GitHub", fillcolor="#D3D3D3"];features->contribution[style=dashed, constraint=false];{rank=same;blocking advancedDNS performance protocols security integration simpleConfig simpleInstall}}
Show HN: Beyond text splitting – improved file parsing for LLMs	https://github.com/Filimoa/open-parse	181	serjester	39966534	digraph OpenParse{rankdir=TB;node[shape=box, style="rounded,filled", fillcolor=lightblue, fontname="Arial"];edge[fontname="Arial", fontsize=10];open_parse[label="Open Parse", fillcolor="#FFB6C1", style="rounded,filled,bold"];visually_driven[label="🔍 Visually-Driven", fillcolor="#98FB98"];markdown_support[label="✍️ Markdown Support"];table_support[label="📊 High-Precision Table Support", fillcolor="#98FB98"];extensible[label="🛠️ Extensible"];intuitive[label="💡 Intuitive"];easy[label="🎯 Easy"];document[label="Document"];parsed[label="Parsed Content"];semantic_processing[label="Semantic Processing"];serialization[label="Serialization"];document->open_parse[label="Parsed by"];open_parse->parsed;parsed->semantic_processing[label="Can be enhanced with"];parsed->serialization[label="Can be converted to"];open_parse->visually_driven;open_parse->markdown_support;open_parse->table_support;open_parse->extensible;open_parse->intuitive;open_parse->easy;subgraph cluster_comparison{label="Comparison with Other Methods";style=filled;color=lightgrey;text_splitting[label="✂️ Text Splitting", fillcolor="#F0E68C"];ml_layout_parsers[label="🤖 ML Layout Parsers"];commercial_solutions[label="💼 Commercial Solutions", fillcolor="#FFA07A"];}open_parse->text_splitting[label="Differs from"];open_parse->ml_layout_parsers[label="Differs from"];open_parse->commercial_solutions[label="Alternative to"];{rank=same;text_splitting;ml_layout_parsers;commercial_solutions}}

title	url	points	by	hnId	dot
TTE: Terminal Text Effects	https://chrisbuilds.github.io/terminaltexteffects/showroom/	810	makapuf	40503202	digraph G{rankdir=LR;node[shape=box, style="rounded,filled", color=lightblue];Effects[label="Terminal Text Effects", fillcolor="#f0e68c"];Beams[label="Beams\nCreates beams illuminating characters", fillcolor="#ff7f50"];Binarypath[label="Binarypath\nDecodes characters into binary", fillcolor="#9acd32"];Blackhole[label="Blackhole\nCharacters consumed and exploded back", fillcolor="#708090"];BouncyBalls[label="BouncyBalls\nCharacters fall like bouncy balls", fillcolor="#ff6347"];Bubbles[label="Bubbles\nCharacters form into bubbles", fillcolor="#4682b4"];Burn[label="Burn\nCharacters ignite and burn up", fillcolor="#dc143c"];ColorShift[label="ColorShift\nDisplays a shifting color gradient", fillcolor="#ffa500"];Crumble[label="Crumble\nCharacters crumble into dust", fillcolor="#8b4513"];Decrypt[label="Decrypt\nMovie style text decryption", fillcolor="#00ced1"];ErrorCorrect[label="ErrorCorrect\nSwaps characters to correct position", fillcolor="#8a2be2"];Expand[label="Expand\nCharacters expand from center", fillcolor="#8fbc8f"];Fireworks[label="Fireworks\nCharacters explode like fireworks", fillcolor="#ff4500"];Matrix[label="Matrix\nDigital rain effect", fillcolor="#008b8b"];MiddleOut[label="MiddleOut\nText expands from the center", fillcolor="#ff69b4"];OrbittingVolley[label="OrbittingVolley\nCharacters launched from orbiting points", fillcolor="#7cfc00"];Overflow[label="Overflow\nText scrolls randomly then orders", fillcolor="#ff1493"];Pour[label="Pour\nCharacters pour from top/bottom/left/right", fillcolor="#d2691e"];Print[label="Print\nSimulates a printer effect", fillcolor="#00bfff"];Rain[label="Rain\nCharacters fall like rain", fillcolor="#1e90ff"];RandomSequence[label="RandomSequence\nPrints characters in random order", fillcolor="#daa520"];Rings[label="Rings\nCharacters form into spinning rings", fillcolor="#ff6347"];Scattered[label="Scattered\nText moves into position from scattered state", fillcolor="#00fa9a"];Slice[label="Slice\nText slides into place from opposite directions", fillcolor="#ff6347"];Slide[label="Slide\nCharacters slide into view", fillcolor="#40e0d0"];Spotlights[label="Spotlights\nIlluminates characters with spotlights", fillcolor="#daa520"];Spray[label="Spray\nCharacters sprayed from a single point", fillcolor="#ff4500"];Swarm[label="Swarm\nCharacters move in swarms", fillcolor="#9acd32"];SynthGrid[label="SynthGrid\nGrid fills with characters", fillcolor="#4169e1"];Unstable[label="Unstable\nCharacters jumble, explode, and reassemble", fillcolor="#ff1493"];VHSTape[label="VHSTape\nCharacters glitch like old VHS", fillcolor="#8b4513"];Waves[label="Waves\nWaves travel across the screen", fillcolor="#00bfff"];Wipe[label="Wipe\nWipe effect to reveal characters", fillcolor="#daa520"];Effects->Beams;Effects->Binarypath;Effects->Blackhole;Effects->BouncyBalls;Effects->Bubbles;Effects->Burn;Effects->ColorShift;Effects->Crumble;Effects->Decrypt;Effects->ErrorCorrect;Effects->Expand;Effects->Fireworks;Effects->Matrix;Effects->MiddleOut;Effects->OrbittingVolley;Effects->Overflow;Effects->Pour;Effects->Print;Effects->Rain;Effects->RandomSequence;Effects->Rings;Effects->Scattered;Effects->Slice;Effects->Slide;Effects->Spotlights;Effects->Spray;Effects->Swarm;Effects->SynthGrid;Effects->Unstable;Effects->VHSTape;Effects->Waves;Effects->Wipe;{rank=same;Effects}}
WP21	https://ma.tt/2024/05/wp21/	414	joshbetz	40496858	digraph WP21_Anniversary{node[shape=box, style=filled, color=lightblue];rankdir=LR;WP21[label="WP21 - WordPress 21st Anniversary"];Milestones[label="Milestones & Highlights"];Opinions[label="11 Opinions for the Future"];Community[label="Community Engagement"];Future[label="Future of WordPress"];Playground[label="WordPress Playground"];Reflection[label="Personal Reflection"];WP21->Milestones[label=" Celebrates"];WP21->Opinions[label=" Outlines"];WP21->Community[label=" Emphasizes"];WP21->Future[label=" Looks Forward"];WP21->Playground[label=" Highlights"];WP21->Reflection[label=" Shares"];subgraph cluster_opinions{label="Opinions";Simplicity[label="Simplicity"];FunBlogging[label="Blogging Fun"];WikiDocs[label="Wiki Documentation"];Forums[label="Community Forums"];Infrastructure[label="Plugin/Theme Infrastructure"];ThemePreviews[label="Theme Previews"];Marketplace[label="Marketplace Dynamics"];FeedbackLoops[label="Feedback Loops"];QuirkyCore[label="Quirky Core"];DeveloperUse[label="Developer Usage"];Support[label="Support & Events"];}Opinions->Simplicity;Opinions->FunBlogging;Opinions->WikiDocs;Opinions->Forums;Opinions->Infrastructure;Opinions->ThemePreviews;Opinions->Marketplace;Opinions->FeedbackLoops;Opinions->QuirkyCore;Opinions->DeveloperUse;Opinions->Support;Playgrounds[label="Playgrounds"];PersonalStory[label="Personal Story"];Future->Playgrounds[label="Includes"];Reflection->PersonalStory[label="Recalls"];}
Reproducing GPT-2 in llm.c	https://github.com/karpathy/llm.c/discussions/481	344	tosh	40502090	digraph llm_c_Reproduction{rankdir=LR;node[fontname="Arial", shape=box, style="rounded"];edge[fontname="Arial"];subgraph cluster_setup{label="Setup Environment";node[color="lightblue"];install_miniconda->install_pytorch[label="Optional"];install_pytorch->install_dependencies;install_dependencies->tokenize_dataset;tokenize_dataset->compile_llm_c;}subgraph cluster_training{label="Training Process";node[color="lightgreen"];compile_llm_c->train_model;train_model->log_training;train_model->checkpoint_save[label="Every 5000 steps"];log_training->visualize_results;}subgraph cluster_results{label="Evaluation & Results";node[color="lightpink"];visualize_results->compare_gpt2[label="HellaSwag"];compare_gpt2->report_findings;}subgraph cluster_optimizations{label="Future Optimizations";node[color="lightyellow"];report_findings->plan_optimizations;}compile_llm_c->{train_model[label="Single GPU"];train_model[label="Multi-GPU"];};train_model->{model_performance[label="Loss"];model_performance[label="Norm"];model_performance[label="Learning Rate"];model_performance[label="MFU"];};model_performance->report_findings;plan_optimizations->{optimize_code[label="Code Cleanup"];add_features[label="Multi-node Training"];};report_findings->{share_results[label="GitHub Discussions"];share_results[label="Discord"];};}
API Shouldn't Redirect HTTP to HTTPS	https://jviide.iki.fi/http-redirects	293	oherrala	40504756	digraph SecurityFlow{rankdir=LR;node[shape=box, style=filled, color=lightblue];HTTP[label="HTTP Request", color=lightpink];HTTPS[label="HTTPS Request", color=lightgreen];Redirect[label="HTTP to HTTPS\nRedirect", color=lightyellow];Sniffing[label="Sniffing Attack", color=red];MITM[label="Man-in-the-Middle\nAttack", color=red];HSTS[label="HSTS Header", color=lightgreen];API[label="API Server", color=lightgrey];FailFast[label="Fail-Fast\nPrinciple", color=lightgreen];ErrorResponse[label="Error Response\n(403 Forbidden)", color=lightgreen];HTTP->Redirect[label="Initial API Call"];Redirect->HTTPS[label="Follow Redirect"];HTTP->Sniffing[label="Vulnerable to"];HTTP->MITM[label="Vulnerable to"];Redirect->HSTS[label="Optional"];HSTS->HTTPS[label="Enforce"];HTTPS->API[label="Secure API Call"];HTTP->FailFast[label="Should trigger"];FailFast->ErrorResponse[label="Instead of Redirect"];subgraph cluster_secure{label="Secure Practices";HTTPS;HSTS;FailFast;ErrorResponse;}subgraph cluster_vulnerabilities{label="Potential Security Risks";Sniffing;MITM;}Legend[shape=none, label=<         <table border="0" cellborder="1" cellspacing="0">             <tr><td>Color</td><td>Meaning</td></tr>             <tr><td><font color="lightpink">Pink</font></td><td>Insecure</td></tr>             <tr><td><font color="lightgreen">Green</font></td><td>Secure</td></tr>             <tr><td><font color="lightyellow">Yellow</font></td><td>Neutral Action</td></tr>             <tr><td><font color="red">Red</font></td><td>Security Threat</td></tr>             <tr><td><font color="lightgrey">Grey</font></td><td>API/Server</td></tr>         </table>>];}
Show HN: I made a free app to calibrate your turntable by simply playing a song	https://grooved.okat.best/	265	okatbest	40501021	digraph G{node[shape=box, style=filled, color=lightblue];edge[color=grey];SelfAwareCopywriting[label="Self-aware Copywriting", fillcolor=lightgreen];TurntableApp[label="Grooved: Turntable Calibration App", fillcolor=lightgreen];SelfAwareCopywriting->"Corporate Facade Drop"[label="Abandoned for"];SelfAwareCopywriting->"Wink Wink Language"[label="Replaced by"];SelfAwareCopywriting->"Vaguely Industry-Related Puns"[label="Characterized by"];"Wink Wink Language"->"Lack of Humor"[label="Resulting in"];"Corporate Facade Drop"->"Loss of Relatability"[label="Leading to"];TurntableApp->"Single Tap Calibration"[label="Offers"];TurntableApp->"No Data Collection"[label="Ensures"];"Single Tap Calibration"->"Play Song"[label="Step 1"];"Play Song"->"Analyze Speed"[label="Step 2"];"Analyze Speed"->"Adjust Turntable"[label="Step 3"];"No Data Collection"->"Local Processing"[label="Through"];"Local Processing"->"No Third Party API"[label="Using"];"Corporate Facade Drop"->"Startup Culture Mimicry"[label="Reflects"];"Startup Culture Mimicry"->"Fun Company Culture"[label="Includes"];"Fun Company Culture"->"Quirky Meeting Rooms"[label="Such as"];"Quirky Meeting Rooms"->"Bob Dylan Quotes"[label="Examples"];"Bob Dylan Quotes"->"Neon Sign Statements"[label="And"];"Neon Sign Statements"->"Punctuation Overuse"[label="With"];SelfAwareCopywriting->"Cultural Commentary"[label="Leads to"];"Cultural Commentary"->TurntableApp[label="Contrasts with"];}
The Nonprofit Industrial Complex and the Corruption of the American City	https://americanaffairsjournal.org/2024/05/the-nonprofit-industrial-complex-and-the-corruption-of-the-american-city/	252	lalaland1125	40497106	digraph G{rankdir=LR;node[shape=box, style="rounded,filled", color=lightblue2];edge[color=indianred3];Naming[label="Naming as Propaganda"];ChileanSeaBass[label="Chilean Sea Bass"];Nonprofits[label="Nonprofits"];Corruption[label="Corruption"];Oversight[label="Lack of Oversight"];GovernmentServices[label="Government Services"];ProgressivePolitics[label="Progressive Politics"];PublicDisservice[label="Public Disservice"];UrbanDoomLoop[label="Urban Doom Loop"];Naming->{ChileanSeaBass, Nonprofits}[label="Example of"];ChileanSeaBass->Nonprofits[label="Similar to"];Nonprofits->Corruption[label="Leads to"];Nonprofits->Oversight[label="Exacerbated by"];Corruption->PublicDisservice[label="Resulting in"];Oversight->GovernmentServices[label="Privatization of"];GovernmentServices->ProgressivePolitics[label="Supported by"];ProgressivePolitics->UrbanDoomLoop[label="Contributes to"];PublicDisservice->UrbanDoomLoop[label="Creates"];{rank=same;ChileanSeaBass, Nonprofits}{rank=same;Corruption, Oversight}{rank=same;PublicDisservice, GovernmentServices}{rank=same;ProgressivePolitics, UrbanDoomLoop}}
Gh-dash: A beautiful CLI dashboard for GitHub	https://github.com/dlvhdr/gh-dash	236	robenkleene	40496150	digraph G{node[shape=rectangle, style=filled, color=lightblue];rankdir=LR;"gh-dash"[fillcolor="#39386B", fontcolor=white];features[label="✨ Features", shape=ellipse, fillcolor="#E2E1ED"];configuration[label="Fully Configurable"];search[label="Search for PRs and Issues"];actions[label="Actions on PRs and Issues"];customizations[label="Custom Themes and Keybindings"];sidebar[label="Detailed Sidebar View"];multi_config[label="Multiple Config Files"];auto_refresh[label="Auto Refresh"];install[label="📦 Installation", shape=ellipse, fillcolor="#E2E1ED"];gh_cli[label="Install GitHub CLI"];extension[label="Install Extension"];nerd_font[label="Use Nerd Font"];manual_install[label="Manual Installation"];update[label="Update Extension"];usage[label="⚡️ Usage", shape=ellipse, fillcolor="#E2E1ED"];run[label="Run gh dash"];help[label="Help Menu"];configuring[label="⚙️ Configuring", shape=ellipse, fillcolor="#E2E1ED"];config_file[label="config.yml"];sections[label="Define Sections"];keybindings[label="Custom Keybindings"];repo_paths[label="Repo Path Mapping"];themes[label="Custom Themes"];layout[label="Custom Layouts"];preview_pane[label="Preview Pane"];refetch_interval[label="Refetch Interval"];"gh-dash"->features;"gh-dash"->install;"gh-dash"->usage;"gh-dash"->configuring;features->{configuration, search, actions, customizations, sidebar, multi_config, auto_refresh};install->{gh_cli, extension, nerd_font, manual_install, update};usage->{run, help};configuring->{config_file, sections, keybindings, repo_paths, themes, layout, preview_pane, refetch_interval};node[width=1.2, height=0.5];edge[penwidth=1.5, color="#383B5B"];}
Doing is normally distributed, learning is log-normal	https://hiandrewquinn.github.io/til-site/posts/doing-is-normally-distributed-learning-is-log-normal/	231	hiAndrewQuinn	40497623	digraph G{rankdir=LR;node[shape=box, style=filled, color=lightgrey];edge[color=blue];"Laravel Project"->"Infra Setup"->"First Customer"[label=" Probability Chain\n0.9 * 0.8 * 0.7 = 0.5"]; "Software Estimation"->"Log-Normal Distribution"[label="Problem Recognition"];"Log-Normal Distribution"->"Process Time Variation"[label="Higher Variance"];"Process Time Variation"->"Project Management Issues"[label="Impact"]; "Technical Hurdles"->"Unknown Challenges"[label="Realistic View"];"Unknown Challenges"->"Leaky Pipeline"[label="Illustrates"]; "Industry Practices"->"Specific Tooling Requirement"[label="Justification"];"Specific Tooling Requirement"->"Hiring Practices"[label="Employer Preference"]; "Learning Phase"->"New Processes"[label="Dominant in"];"New Processes"->"Leaky Pipeline"[label="Subject to"];"Leaky Pipeline"->"Routine Activity"[label="Leads to"]; "Just-in-Time Learning"->"Log-Normal Distribution"[label="Non-Normally Distributed"];"Academic Learning"->"Just-in-Case Learning"[label="Contrast"]; subgraph cluster_0{label="Software Development";"Laravel Project";"Infra Setup";"First Customer";"Software Estimation";"Technical Hurdles";} subgraph cluster_1{label="Learning & Distribution";"Log-Normal Distribution";"Process Time Variation";"Just-in-Time Learning";"Academic Learning";"Just-in-Case Learning";} subgraph cluster_2{label="Industry & Practices";"Industry Practices";"Specific Tooling Requirement";"Hiring Practices";"New Processes";"Routine Activity";}}
Mobifree – An open-source mobile ecosystem	https://f-droid.org/2024/05/24/mobifree.html	218	jrepinc	40501027	digraph G{rankdir=LR;node[shape=box, style=filled, color=lightblue];edge[color=blue];BigTech[label="Big Tech Ecosystem", fillcolor="#ff9999"];Mobifree[label="Mobifree Ecosystem", fillcolor="#99ff99"];F_Droid[label="F-Droid", fillcolor="#99ffff"];Users[label="Users"];Developers[label="Developers"];Governments[label="Governments"]; BigTech->Users[label="Locks in"];BigTech->Governments[label="Controls"];BigTech->Developers[label="Gatekeeping"]; Mobifree->Users[label="Empowers"];Mobifree->Governments[label="Independence"];Mobifree->Developers[label="Freedom"]; F_Droid->Mobifree[label="Contributes"];F_Droid->Developers[label="Decentralized\nApp Distribution"];F_Droid->Users[label="Open Source\nSolutions"]; EU_Legislation[label="EU Legislation\n(DMA)", shape=oval, fillcolor="#ffff99"];EU_Legislation->BigTech[label="Restricts"];EU_Legislation->Mobifree[label="Enables"]; Community[label="Community\nSupport", shape=oval, fillcolor="#ffcc99"];Community->Mobifree[label="Enhances"];{rank=same;Users;Governments;Developers;}}
Show HN: Openkoda – Open–source, private, Salesforce alternative	https://github.com/openkoda/openkoda	208	mgl	40502956	digraph Openkoda{rankdir=TB;node[shape=box, style="rounded, filled", color="lightblue", fontname="Arial"];edge[color="gray"];Openkoda[label="Openkoda\nPlatform", fillcolor="#4CAF50", fontcolor="white"];subgraph cluster_features{label="Key Features";style=filled;color=lightgrey; "Enterprise Foundation"[fillcolor="#FF9800"];"Pre-built Templates"[fillcolor="#FF9800"];"Customization"[fillcolor="#FF9800"];"Speed Development"[fillcolor="#FF9800"];"No Vendor Lock-in"[fillcolor="#FF9800"];"Scalability"[fillcolor="#FF9800"];"Security"[fillcolor="#FF9800"];"Automations"[fillcolor="#FF9800"];"Integrations"[fillcolor="#FF9800"];"Open Source"[fillcolor="#FF9800"];}subgraph cluster_tech{label="Technology Stack";style=filled;color=lightgrey; "Java"[fillcolor="#2196F3"];"Spring Boot"[fillcolor="#2196F3"];"JavaScript"[fillcolor="#2196F3"];"Hibernate"[fillcolor="#2196F3"];"PostgreSQL"[fillcolor="#2196F3"];"GraalVM"[fillcolor="#2196F3"];}Openkoda->"Enterprise Foundation"->{"Pre-built Templates";"Customization";"Speed Development";"No Vendor Lock-in";"Scalability";"Security";"Automations";"Integrations";"Open Source";};Openkoda->"Java"->{"Spring Boot";"Hibernate";};"Java"->"JavaScript";"Hibernate"->"PostgreSQL";"PostgreSQL"->"GraalVM";"Quick Start"[shape=ellipse, style="filled", fillcolor="#FFC107", fontcolor="black"];Openkoda->"Quick Start";"MIT License"[shape=note, fillcolor="#9E9E9E", fontcolor="white"];Openkoda->"MIT License";}

title	url	points	by	hnId	dot
Inside a $1 radar motion sensor	https://10maurycy10.github.io/projects/motion_sensor_hacking/	566	nothacking_	40834349	digraph G{rankdir=LR;node[shape=box, style=filled, color=lightblue2];edge[color=gray50, arrowsize=0.5];Sensor[label="RCWL-0516 Sensor"];BISS0001[label="BISS0001 Chip"];Oscillator[label="3.18 GHz Oscillator"];Receiver[label="Super-regenerative Receiver"];MotionDetection[label="Motion Detection"];OutdoorPerformance[label="Outdoor Performance"];IndoorPerformance[label="Indoor Performance"];IF_Signal[label="IF Signal", shape=ellipse];Amplifier[label="Amplifier", shape=ellipse];Comparator[label="Comparator", shape=ellipse];Timer[label="Timer", shape=ellipse];Antenna[label="Antenna", shape=ellipse];Modifications[label="Modifications", shape=ellipse];Sensor->BISS0001;BISS0001->Oscillator[label="Oscillator"];BISS0001->Receiver[label="Receiver"];Oscillator->Receiver[label="Pulsed at 20 MHz"];Receiver->IF_Signal[label="Generates"];IF_Signal->Amplifier;Amplifier->Comparator;Comparator->Timer;Timer->MotionDetection[label="Triggers"];MotionDetection->IndoorPerformance;MotionDetection->OutdoorPerformance;Modifications->Oscillator[label="Remove Capacitors"];Modifications->OutdoorPerformance[label="Improves"];Antenna->Oscillator[label="Resonator/Antenna"];{rank=same;Sensor, BISS0001}{rank=same;Oscillator, Receiver}{rank=same;Amplifier, Comparator, Timer}}
Show HN: Drop-in SQS replacement based on SQLite	https://github.com/poundifdef/SmoothMQ	394	memset	40837610	digraph G{rankdir=LR;node[shape=box, style=filled, color=lightblue];SmoothMQ[label="SmoothMQ\nA Drop-in SQS Replacement", fillcolor="#ffcccc"];SQS[label="SQS\n(AWS Service)", fillcolor="#ccffcc"];Developer[label="Developer", fillcolor="#cceeff"];Client[label="SQS Client", fillcolor="#ffffcc"];UI[label="Functional UI", fillcolor="#ccffcc"];Observability[label="Observability", fillcolor="#ccffcc"];Features[label="Additional Features", fillcolor="#ffccff"];Cloud[label="Any Cloud", fillcolor="#cccccc"];Developer->SmoothMQ[label=" Uses"];SmoothMQ->SQS[label=" Replaces"];SmoothMQ->Client[label=" Compatible With"];SmoothMQ->UI[label=" Provides"];SmoothMQ->Observability[label=" Includes"];SmoothMQ->Features[label=" Offers"];SmoothMQ->Cloud[label=" Deploys on"];Features->"Message Scheduling"[label="e.g."];Features->"Rate Limiting"[label="e.g."];Features->"Tracing"[label="e.g."];{rank=same;SmoothMQ, SQS}{rank=same;UI, Observability, Features}}
Chrome is adding `window.ai` â€“ a Gemini Nano AI model right inside the browser	https://twitter.com/rauchg/status/1806385778064564622	218	modinfo	40834600	digraph URLChange{rankdir=LR;node[shape=box, style=filled, color=lightblue];edge[color=blue];"Welcome to x.com!"->"URL Change"[label="Announcement"];"URL Change"->"Privacy and Data Protection"[label="No Change"];"Privacy and Data Protection"->"Privacy Policy"[label="Refer to"]; "Privacy Policy"[shape=note, URL="https://x.com/en/privacy", tooltip="View Privacy Policy", target="_blank"];}
Weekend projects: getting silly with C	https://lcamtuf.substack.com/p/weekend-projects-getting-silly-with	214	nothacking_	40835274	digraph G{rankdir=LR;node[shape=box, style=filled, color=lightblue];edge[color=purple];"C Language"[fillcolor=lightyellow];"Simple Syntax"->"C Language";"Obfuscation"->"C Language";"Switch Statement"->"C Language";"Preprocessor Macros"->"Obfuscation";"Nonsensical Formatting"->"Obfuscation";"Arithmetic Expressions"->"Obfuscation";"No Brackets Switch"->"Switch Statement";"Case Label Placement"->"Switch Statement";"Goto Mechanism"->"Switch Statement";"Label Address"->"Goto Mechanism";"Loop with Labels"->"Goto Mechanism";"Obfuscation"->"IOCCC Contest";"IOCCC Contest"[fillcolor=lightpink];"Switch Statement"->"No Brackets Switch"[label="Can omit"];"Switch Statement"->"Case Label Placement"[label="Flexible"];"Goto Mechanism"->"Label Address"[label="Extension"];"Goto Mechanism"->"Loop with Labels"[label="Usage"];"C Language"[shape=ellipse, fillcolor=lightgreen];}
Writing GUI apps for Windows is painful	https://tulach.cc/writing-gui-apps-for-windows-is-painful/	192	wild_pointer	40839208	digraph GUI_Libraries{rankdir=LR;node[shape=box, style=filled, color=lightblue];edge[color=grey];User[label="User Needs:\n- Windows only\n- Commercial Use\n- Easy Styling\n- Single .exe\n- Minimal Time", fillcolor=lightgreen];WinUI3[label="WinUI 3\n- Modern components\n- XAML styling\n- Problem: Unpackaged form issues"];Win32[label="Win32/MFC\n- Native Rendering\n- Statically linkable\n- Problem: Hard to style"];Qt[label="Qt\n- Complex but powerful\n- CSS-like styling\n- Problem: Licensing and size"];WxWidgets[label="wxWidgets\n- Permissive license\n- Statically linkable\n- Problem: Poor styling options"];Hikogui[label="hikogui\n- Vulkan backend\n- Easy styling\n- Problem: Hard to compile"];Sciter[label="Sciter\n- HTML/CSS for GUI\n- Problem: Rendering issues"];WinForms_WPF[label="WinForms/WPF\n- .NET integration\n- Problem: Not native C++"];DearImGui[label="Dear ImGui\n- Immediate mode GUI\n- Small executable\n- Easy to use", fillcolor=yellow];User->{WinUI3, Win32, Qt, WxWidgets, Hikogui, Sciter, WinForms_WPF, DearImGui}; WinUI3->Unpackaged[label="Problem"];Win32->HardToStyle[label="Problem"];Qt->LicensingSize[label="Problem"];WxWidgets->PoorStyling[label="Problem"];Hikogui->HardCompile[label="Problem"];Sciter->RenderingIssues[label="Problem"];WinForms_WPF->NotNativeCPP[label="Problem"]; DearImGui->Solution[label="Best Fit for:\n- Simple Apps\n- Minimal Dependencies"]; Unpackaged[label="Unpackaged Issues"];HardToStyle[label="Hard to Style"];LicensingSize[label="Licensing & Size"];PoorStyling[label="Poor Styling Options"];HardCompile[label="Hard to Compile"];RenderingIssues[label="Rendering Issues"];NotNativeCPP[label="Not Native C++"];Solution[label="Solution"];}
Postzegelcode	https://en.wikipedia.org/wiki/Postzegelcode	153	tdeck	40839418	digraph Postzegelcode{rankdir=LR;node[shape=box, style=filled, color=lightblue];edge[color=grey];Postzegelcode[label="Postzegelcode\n(Hand-written franking)", fillcolor=lightyellow];Purchase[label="Purchase Online"];WriteCode[label="Write Code on Mail"];Validity[label="Valid for 5 Days"];GridFormat[label="3x3 Grid for Domestic\n4x3 Grid for International"];Cost[label="Same Price as Stamps"];UsageStats[label="Usage Increased"];Postzegelcode->Purchase;Postzegelcode->WriteCode;Postzegelcode->Validity;Postzegelcode->GridFormat;Postzegelcode->Cost;Postzegelcode->UsageStats;Safety[label="Low Risk of Fraud", fillcolor=lightgreen];PostNL[label="PostNL", shape=ellipse, fillcolor=lightcoral];Introduced[label="Introduced 2013"];Purchase->PostNL[label="From"];WriteCode->Safety;Validity->Safety;Introduced->Postzegelcode;}
Coffee helped the Union in the Civil War	https://www.smithsonianmag.com/history/how-coffee-helped-the-union-caffeinate-their-way-victory-civil-war-180984502/	139	bookofjoe	40834345	digraph CoffeeInCivilWar{node[shape=box, style="rounded,filled", fontname="Arial", fontsize=10];edge[fontname="Arial", fontsize=8];UnionArmy[label="Union Army", fillcolor="#FF9999"];CoffeeSupply[label="Coffee Supply", fillcolor="#99FF99"];Liberia[label="Liberia", fillcolor="#99CCFF"];Benson[label="Stephen A. Benson", fillcolor="#FFCC99"];CivilianLife[label="Civilian Life", fillcolor="#FFFF99"];FreeProduceMovement[label="Free Produce Movement", fillcolor="#FF99FF"];Impact[label="Impact of Coffee", fillcolor="#99FFFF"];UnionArmy->CoffeeSupply[label="High Demand"];CoffeeSupply->Liberia[label="Alternative Source"];Liberia->Benson[label="Key Figure"];Benson->FreeProduceMovement[label="Advocate"];FreeProduceMovement->CivilianLife[label="Ethical Consumption"];CoffeeSupply->UnionArmy[label="Increased Morale"];CoffeeSupply->Impact[label="Strategic Advantage"];Impact->Confederacy[label="Demoralization", color="red"];CivilianLife->CoffeeCulture[label="Post-War Habit"]; CoffeeCulture[label="Coffee Culture", fillcolor="#FF99CC"];Confederacy[label="Confederacy", fillcolor="#FF9999", style="rounded"];{rank=same;UnionArmy;Confederacy}{rank=same;Benson;FreeProduceMovement} Benson->Emigration[label="Emigrated from MD"];Emigration[label="Emigration to Liberia", fillcolor="#99CCFF"];Benson->CoffeeFarming[label="Major Farmer"];CoffeeFarming[label="Coffee Farming", fillcolor="#99FF99"]; FreeProduceMovement->EthicalTrade[label="Advocated For"];EthicalTrade[label="Ethical Trade", fillcolor="#FF99FF"];FreeProduceMovement->Quakers[label="Supported By"];Quakers[label="Quakers", fillcolor="#FF99FF"]; CoffeeSupply->BrazilBlockade[label="Source Disrupted"];BrazilBlockade[label="Brazil Blockade", fillcolor="#99FF99"];CoffeeSupply->LiberianCoffee[label="New Supply"];LiberianCoffee[label="Liberian Coffee", fillcolor="#99FF99"]; Impact->UnionVictory[label="Contributed To"];UnionVictory[label="Union Victory", fillcolor="#99FFFF"];}
Rodney Brooks on limitations of generative AI	https://techcrunch.com/2024/06/29/mit-robotics-pioneer-rodney-brooks-thinks-people-are-vastly-overestimating-generative-ai/	137	doener	40835588	digraph G{node[shape=box, style=filled, color=lightblue, fontname="Arial"];edge[fontname="Arial"];Brooks[label="Rodney Brooks", fillcolor=lightgrey];GenerativeAI[label="Generative AI", fillcolor=yellow];Overestimation[label="Overestimation of Capabilities"];HumanLike[label="Not Human-Like"];AIApplications[label="AI Applications"];PracticalUse[label="Practical Use Cases"];Limitations[label="Limitations of AI"];ExponentialGrowth[label="Exponential Growth Myth"];ControlTheory[label="Control Theory"];Optimization[label="Optimization Techniques"];BusinessCase[label="Business Case"];Robotics[label="Robotics Integration"];Brooks->GenerativeAI[label="Discusses"];GenerativeAI->Overestimation[label="Leads to"];GenerativeAI->HumanLike[label="Not"];Overestimation->AIApplications[label="Misguides"];AIApplications->PracticalUse[label="Should Focus on"];AIApplications->Limitations[label="Ignoring"];ExponentialGrowth->AIApplications[label="Misleads"];ControlTheory->Robotics[label="Necessary for"];Optimization->Robotics[label="Crucial in"];BusinessCase->AIApplications[label="Should Consider"];Robotics->PracticalUse[label="Example of"];Overestimation[color=orange];ExponentialGrowth[color=orange];PracticalUse[color=green];}
Canada 'sleepwalking' into cashless society, consumer advocates warn	https://www.cbc.ca/news/canada/ottawa/canada-sleepwalking-into-cashless-society-consumer-advocates-warn-1.7248846	129	throw0101b	40838515	digraph G{rankdir=LR;node[shape=box, style=filled, color=lightblue];edge[color=blue];"Cash Usage Decline"[label="Decline in Cash Usage", fillcolor=lightcoral];"Consumer Concerns"[label="Consumer Concerns\nAbout Cashless Society", fillcolor=lightgreen];"Government Action"[label="Need for Government\nLegislation", fillcolor=lightgoldenrod];"Vulnerable Groups"[label="Impact on Vulnerable\nGroups", fillcolor=lightsalmon];"International Examples"[label="International\nLegislation Examples", fillcolor=lightpink];"Cash Usage Decline"->"Consumer Concerns"[label="Leads to"];"Consumer Concerns"->"Government Action"[label="Calls for"];"Government Action"->"Vulnerable Groups"[label="To Protect"];"Government Action"->"International Examples"[label="Inspired by"];"International Examples"->"Government Action"[label="Precedent for"]; label="Advocacy for Cash Protection Legislation";labelloc="t";fontsize=20;}
The weirdest QNX bug I've encountered (2021)	https://mental-reverb.com/blog.php?id=29	122	fanf2	40837411	digraph FirmwareUpdateProblem{rankdir=LR;node[shape=box, style="rounded"];edge[color=blue];Start[label="Start", shape=ellipse];Update[label="Firmware Update\nVersion X to Y"];LogCheck[label="Check Logs"];ProcessCheck[label="Check Process\nBehavior"];IdentifyIssue[label="Identify Issue"];Solution[label="Implement Solution", shape=diamond];End[label="End", shape=ellipse];Start->Update;Update->LogCheck[label="Update Successful"];LogCheck->ProcessCheck[label="No Errors"];ProcessCheck->IdentifyIssue[label="High CPU Load"];IdentifyIssue->Solution[label="Find Root Cause"];Solution->End[label="Remove 'ps' usage"];Solution->End[label="Use Open Source 'ps'"];Solution->End[label="Await QNX Update"];BugFound[label="Infinite Loop\nin 'ps' Utility"];RootCause[label="Race Condition\nin 'ps' Source"];IdentifyIssue->BugFound;BugFound->RootCause;RootCause->Solution[label="Confirm Bug"];}

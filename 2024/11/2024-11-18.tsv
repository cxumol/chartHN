title	url	points	by	hnId	dot
CSS gets a new logo and it uses the color `rebeccapurple`	https://michaelcharl.es/aubrey/en/code/new-rebeccapurple-css-logo	763	thunderbong	42161919	digraph G{rankdir=LR;size="8,5";node[shape=box style=filled color="#663399" fontcolor=white]; css[label="CSS Specification"];css_next_vote[label="Community Vote\nCSS-Next Repository"];new_logo[label="New CSS Logo"];design_language[label="Design Language\nof Web Technologies"];rebeccapurple[label="Color rebeccapurple\n#663399"];eric_meyer[label="Eric Meyer\nCSS Community Figure"];honor_rebecca[label="In Honor of Rebecca"]; css->rebeccapurple[label="2014"];css_next_vote->new_logo[label="Decided by"];new_logo->design_language[label="Follows"];new_logo->rebeccapurple[label="Uses color"];rebeccapurple->honor_rebecca[label="Named after"];honor_rebecca->eric_meyer[label="Daughter of"];}
Humans have caused 1.5 °C of long-term global warming according to new estimates	https://www.lancaster.ac.uk/news/humans-have-already-caused-15-c-of-long-term-global-warming-according-to-new-estimates	364	gmays	42166030	digraph GlobalWarming{rankdir=TB;node[shape=box, style=rounded, fontname="Arial", fontsize=12];Humans[label="Human Activities" color="#a0d0e0"];GlobalWarming[label="Global Warming\n1.5 °C Threshold" shape=oval color="#ffcccb"];Contribution[label="1.31 °C Contribution\n1.10 to 1.60 °C Uncertainty" color="#fff68f"];NewMethod[label="New Methodology\nPre-1700 Baseline\nReduces Uncertainty" color="#ffe4b5"];IPCC[label="IPCC Estimates" color="#d3cfd6"]; Humans->GlobalWarming[label="Causing" color="#ff5733"];GlobalWarming->Contribution[label="Current Estimate" color="#ff5733"];GlobalWarming->NewMethod[label="Provides Accurate Estimate" color="#ff5733"];Contribution->IPCC[label="Via Current IPCC Methods" color="#ff5733"]; subgraph cluster_summary{label="Key Insights";style=dashed;Summary1[label="1.5 °C may already be breached." color="#b0e0e6"];Summary2[label="Actions are crucial to manage limits." color="#b0e0e6"];Summary3[label="Need for improved methodologies." color="#b0e0e6"];Summary1->Summary2;Summary2->Summary3;}}
Everything Is Just Functions: Insights from SICP and David Beazley	https://ezzeriesa.notion.site/1-week-with-David-Beazley-and-SICP-4c440389cf1e43f48fe67c969967f655#58ee6b0435b24e26bd624b33ffed94df	280	kurinikku	42164541	digraph SICP_Course{node[shape=box, style=filled, fontname="Helvetica"]; Overview[label="1 Week with David Beazley and SICP" shape=rect width=3];Resources[label="Free Resources" shape=ellipse width=2];Learning[label="What Did I Learn?" shape=ellipse width=2];Concepts[label="Key Concepts (Substitution, Scheme, Racket)" shape=rect width=3];PythonInterpreter[label="Python Scheme Interpreter" shape=rect width=3];Substitution[label="Substitution Model" shape=rect width=3];Functions[label="User-Defined Functions" shape=ellipse width=2];Fibonacci[label="Fibonacci Example" shape=ellipse width=2];Interpretation[label="Interpretation and Substitution in Procedures" shape=rect width=3];Limitations[label="Substitution Model Limitations" shape=rect width=3]; Overview->Resources;Overview->Learning;Overview->Concepts; Concepts->PythonInterpreter;Concepts->Substitution;Concepts->Functions; PythonInterpreter->Substitution;Substitution->Fibonacci; Substitution->Interpretation;Interpretation->Limitations; Resources->"Dave as Guide"[label="Importance of guidance"];Learning->"Big Picture"[label="Realizing computation fundamentals"];Functions->"Lambda & Define"[label="Key constructs for creating functions"];Functions->"Control Flow"[label="If, >, <, = etc."];Fibonacci->"Toy Language"[label="Use case in practice"];Interpretation->"Procedures vs Data"[label="Substitution in action"];Limitations->"Set! and Changing Variables"[label="Breakdown of Substitution"];}
James Gleick's Chaos: The Software	https://github.com/rudyrucker/chaos	238	signa11	42160647	digraph CHAOS_Software{rankdir=TB;node[shape=box];A[label="James Gleick's CHAOS: The Software" shape=ellipse style=filled color=lightblue];subgraph cluster_contributors{label="Contributors";style=dashed;JoshGordon[label="Josh Gordon\n(Interface, Implementation)" shape=rectangle];RudyRucker[label="Rudy Rucker\n(Algorithms)" shape=rectangle];JohnWalker[label="John Walker\n(Fractal Landscapes Algorithms)" shape=rectangle];}subgraph cluster_modules{label="Software Modules";style=dashed;MANDEL[label="MANDEL\n(Mandelbrot Set, Julia Sets)" shape=rectangle];MAGNETS[label="MAGNETS\n(Pendulum and Magnets)" shape=rectangle];ATTRACT[label="ATTRACT\n(Strange Attractors)" shape=rectangle];GAME[label="GAME\n(Barnsley Fractals)" shape=rectangle];FORGE[label="FORGE\n(Fractal Forgeries)" shape=rectangle];TOY[label="TOY\n(Toy Universes, Cellular Automata)" shape=rectangle];}subgraph cluster_resources{label="Resources";style=dashed;SourceCode[label="Source Code\n(GitHub Repository)" shape=rectangle];UserManual[label="User  Manual\n(PDF)" shape=rectangle];Executables[label="CHAOS Executables\n(Download Link)" shape=rectangle];}A->cluster_contributors;A->cluster_modules;A->cluster_resources; cluster_contributors->SourceCode;cluster_modules->Executables;}
Good Software Development Habits	https://zarar.dev/good-software-development-habits/	231	mmphosis	42165057	digraph ZararBlog{graph[rankdir=TB];node[shape=box, style=filled, fillcolor="#E6E6E6", fontname="Arial", fontsize=10];title[label="Zarar's Blog: Key Ideas for Product Development", shape=plaintext];habits[label="10 Habits for Speed & Quality", shape=ellipse, fillcolor="#D2E9D2"];habit1[label="1. Keep commits small"];habit2[label="2. Continuous refactoring"];habit3[label="3. All code is a liability"];habit4[label="4. Trust the framework"];habit5[label="5. Create new modules for unique functions"];habit6[label="6. Write tests to define API"];habit7[label="7. Avoid duplication"];habit8[label="8. Embrace design changes"];habit9[label="9. Classify technical debt"];habit10[label="10. Testability indicates design quality"];habits->habit1;habits->habit2;habits->habit3;habits->habit4;habits->habit5;habits->habit6;habits->habit7;habits->habit8;habits->habit9;habits->habit10;note[label="Not advice: Personal reflections", shape=plaintext];habits->note[style=dashed];}
All-in-one embedding model for interleaved text, images, and screenshots	https://blog.voyageai.com/2024/11/12/voyage-multimodal-3/	223	fzliu	42162622	digraph G{rankdir=LR;node[shape=box];A[label="voyage-multimodal-3" shape=ellipse style=filled fillcolor=lightblue];B[label="State-of-the-art Multimodal Embedding Model" shape=box];C[label="Supports Interleaved Text & Images" shape=box];D[label="Improves Retrieval Accuracy by 19.63%" shape=box];E[label="Eliminates Complex Document Parsing" shape=box];F[label="Architecture Similar to Vision-Language Transformers" shape=box];G[label="Outperforms Existing Models" shape=box];H[label="Evaluation across 20 Multimodal Datasets" shape=box];I[label="Mixed Modality Search" shape=box];J[label="No Performance Drop Across Ratios" shape=box];K[label="Available for Use Now" shape=box];A->B;A->C;A->D;A->E;A->F;A->G;A->H;A->I;A->K;C->J;G->D;H->G[label="41.44% better on table/figure retrieval" style=dashed];H->G[label="26.54% better on document screenshot retrieval" style=dashed];H->G[label="6.55% better on text-to-photo retrieval" style=dashed];}
Bpftune uses BPF to auto-tune Linux systems	https://github.com/oracle/bpftune	199	BSDobelix	42163597	digraph bpftune{graph[rankdir=LR];node[shape=box, style=filled, fillcolor=lightblue];A[label="bpftune\n(BPF Driven Auto-tuning)"];B[label="Key Benefits"];C[label="The Problem"];D[label="Key Design Principles"];E[label="Concepts"];F[label="Architecture"];G[label="Supported Tuners"];H[label="Getting Started"];I[label="Tests"];J[label="Demo"];K[label="System Support"];L[label="Contributing"];M[label="License"];A->B;A->C;A->D;A->E;A->F;A->G;A->H;A->I;A->J;A->K;A->L;A->M;B->"Continuous Monitoring\n& Adjusting System Behavior";B->"Fine-Grained Tuning";C->"Large Number of Tunables\n(1624 on Kernel 6.2)";C->"Minimal Admin Interaction";C->"Need for Rethink in\nTunable Management"; D->"Minimize Overhead";D->"Explicit Policy Changes";D->"Respect Admin Settings";D->"Zero Configuration";D->"Push-Pull Approaches"; E->"Tuners Manage Tunables";E->"Strategies for Evaluation";E->"Event Handling"; F->"Daemon with Plugin Tuners";F->"Global BPF Ring Buffer";F->"BPF & Userspace Components"; G->"TCP Connection Tuner";G->"Neighbour Table Tuner";G->"Route Table Tuner";G->"Sysctl Tuner";G->"TCP Buffer Tuner";G->"Net Buffer Tuner";G->"Netns Tuner"; H->"Build Commands";H->"Dependencies";H->"Enable as Service"; I->"Tests for Each Tuner"; J->"Observing Log Changes"; K->"System Support Verification"; L->"Community Contributions Welcome"; M->"GPL-2.0 License";}
Claude AI built me a React app to compare maps side by side	https://github.com/veloplanner/map-matrix	182	caspg	42164141	digraph map_matrix{rankdir=LR;node[shape=box, style=filled, fontname="Helvetica", fontsize=12, fillcolor="#f7f7f7", color="#d0d0d0"];MapMatrix[label="MapMatrix: A React application for synchronized\nmulti-view map comparison" shape=ellipse style=bold fillcolor="#e0e0e0"];Features[label="Features" shape=rect fillcolor="#ffeb3b"];Development[label="Development" shape=rect fillcolor="#ffeb3b"];About[label="About" shape=rect fillcolor="#ffeb3b"];License[label="MIT License" shape=rect fillcolor="#ffeb3b"];FeatureAdd[label="Add Custom Map Source" shape=rect fillcolor="#ffffff"];FeatureConfig[label="Local Storage for Config" shape=rect fillcolor="#ffffff"];FeatureAPI[label="Supports Google & Radar Maps APIs" shape=rect fillcolor="#ffffff"];DevCommand[label="npm install\nnpm run dev" shape=rect fillcolor="#ffffff"];AboutAI[label="AI-driven development with Claude & Cursor AI" shape=rect fillcolor="#ffffff"];MapMatrix->Features;MapMatrix->Development;MapMatrix->About;MapMatrix->License;Features->FeatureAdd;Features->FeatureConfig;Features->FeatureAPI;Development->DevCommand;About->AboutAI;License[label="MIT License" shape=rect fillcolor="#ffeb3b"];}
The myth that you can’t build interactive web apps except as single page app	https://htmx.org/essays/you-cant/	182	gherkinnn	42164154	digraph Browser_Advancements{rankdir=TB;node[shape=box, style=rounded, fontsize=10];Title[label="An Ode to Browser Advancements" shape=ellipse fontsize=12 fontcolor=white style=filled fillcolor=gray]; MPA[label="Multi-Page Applications (MPA)"];SPA[label="Single-Page Applications (SPA)"]; Subtitle1[label="Common MPA Myths"];Myth1[label="Myth 1: MPA transitions are slow"];Myth2[label="Myth 2: MPAs can't operate offline"];Myth3[label="Myth 3: Flash during transitions"];Myth4[label="Myth 4: Fancy transitions not possible"];Myth5[label="Myth 5: Server-side only actions"];Myth6[label="Myth 6: Direct DOM is slow"];Myth7[label="Myth 7: Need JS for minor interactions"];FinalMyth[label="Final Myth: Javascript will be spaghetti"];ServiceWorker[label="Client-side Caching via Service Workers"];Workbox[label="Use Workbox for Service Workers"]; Conclusion[label="Conclusion: Browser has improved capabilities"]; Title->MPA;Title->SPA; MPA->Subtitle1;Subtitle1->Myth1;Subtitle1->Myth2;Subtitle1->Myth3;Subtitle1->Myth4;Subtitle1->Myth5;Subtitle1->Myth6;Subtitle1->Myth7;Subtitle1->FinalMyth;Myth1->ServiceWorker;Myth2->ServiceWorker;Myth3->ServiceWorker;Myth4->ServiceWorker;ServiceWorker->Workbox; Workbox->Conclusion;}
Constraints in Go	https://bitfieldconsulting.com/posts/constraints	153	gus_leonel	42162878	digraph GoGenerics{rankdir=TB;node[shape=box, style=filled, fillcolor="#E8F0FE"];quote[label="Design is the beauty of turning constraints into advantages.\n— Aza Raskin" shape=note];constraints[label="Constraints in Go Generics" shape=ellipse];limitations[label="Limitations of 'any' Constraint" shape=box];basic_interfaces[label="Basic Interfaces" shape=box];type_set_constraints[label="Type Set Constraints" shape=box];unions[label="Unions" shape=box];intersections[label="Intersections" shape=box];empty_type_sets[label="Empty Type Sets" shape=box];composite_types[label="Composite Types" shape=box];approximations[label="Type Approximations" shape=box];interface_literals[label="Interface Literals" shape=box];quote->constraints;constraints->limitations;constraints->basic_interfaces;constraints->type_set_constraints;constraints->unions;constraints->intersections;constraints->empty_type_sets;constraints->composite_types;constraints->approximations;constraints->interface_literals;basic_interfaces->limitations;unions->type_set_constraints;intersections->empty_type_sets;approximations->composite_types;}

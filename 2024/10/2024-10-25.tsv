title	url	points	by	hnId	dot
Rider is now free for non-commercial use	https://www.jetbrains.com/rider/	631	kretaceous	41936001	digraph G{node[shape=rectangle, style=filled, fontname="Helvetica,Arial,sans-serif", color="#0060ac", fillcolor="#ebf3ff"];edge[color="#0060ac"];"JetBrains Rider"->"Download Page"[label="Leads to"];"JetBrains Rider"[label="JetBrains Rider", URL="https://www.jetbrains.com/rider/", target="_blank", tooltip="Visit JetBrains Rider page"];"Download Page"[label="Download Page", URL="https://www.jetbrains.com/rider/download/", target="_blank", tooltip="Download Rider"];}
AWS data center latencies, visualized	https://benjdd.com/aws/	477	orliesaurus	41931572	digraph AWS_Latency{rankdir=LR;node[shape=box, style="rounded,filled", fontname="Arial", fontsize=10, fillcolor="#D8D8D8", color="#404040"];edge[color="#404040"];Latency[label="AWS Data Center Latencies", fillcolor="#97C2FC", color="#0057B8", fontcolor="black", fontsize=12];Under100[label="< 100ms", fillcolor="#C6E2FF"];Between100200[label="100ms - 200ms", fillcolor="#A6D5FF"];Over200[label="> 200ms", fillcolor="#97C2FC"];DataSource[label="Data by Ben\nCloudPing", shape=note, fillcolor="#FFF2CC", color="#D6B656", fontcolor="#8C560A", fontsize=8];Latency->Under100;Latency->Between100200;Latency->Over200;Latency->DataSource[style=dashed];{rank=same;Under100;Between100200;Over200}}
Show HN: RF Hunter – Find hidden cameras and other devices	https://github.com/RamboRogers/rfhunter	427	RamboRogers	41930628	digraph RFHunter{rankdir=LR;node[shape=box, style=filled, color=lightblue];RFHunter[label="RFHunter V4.0", fillcolor=lightgreen];ESP32[label="ESP32"];AD8317[label="AD8317 RF Detector"];OLED[label="OLED Display"];Battery[label="Battery"];ChargeController[label="Charge Controller (TP4056)"];BoostConverter[label="Boost Converter"];Potentiometer[label="Potentiometer"];Buzzer[label="Piezo Buzzer"];PowerSwitch[label="Power Switch"];ESP32->OLED[label="I2C"];ESP32->AD8317[label="GPIO 34"];ESP32->Potentiometer[label="GPIO 35"];ESP32->Buzzer[label="GPIO 5"];Battery->ChargeController[label="Charge"];ChargeController->BoostConverter[label="Power"];BoostConverter->AD8317[label="9V"];Battery->PowerSwitch;PowerSwitch->ESP32[label="5V VIN"];subgraph cluster_power{label="Power Management";Battery;ChargeController;BoostConverter;PowerSwitch;}subgraph cluster_sensors{label="Sensors & Outputs";AD8317;OLED;Potentiometer;Buzzer;}Author[label="Matthew Rogers", shape=ellipse, fillcolor=lightyellow];License[label="GPLv3", shape=ellipse, fillcolor=lightyellow];Updates[label="Project Updates\n(Hackernews, X posts)", shape=ellipse, fillcolor=lightyellow];Usage[label="Usage", shape=ellipse, fillcolor=lightyellow];BOM[label="Bill of Materials", shape=ellipse, fillcolor=lightyellow];Author->RFHunter;License->RFHunter;Updates->RFHunter;Usage->RFHunter;BOM->RFHunter;}
Show HN: 2048 turned 10 this year, I built an updated version to celebrate	https://play2048.co	414	terabytest	41934746	digraph G{rankdir=TB;node[shape=box, style=filled, color="#E0E0E0", fontname="Arial"];edge[color="#4285F4"];Welcome[label="Welcome to 2048!", color="#FF8A65"];Standard[label="Standard 2048\n(with powerups)", color="#64B5F6"];Classic[label="Classic 2048\n(no undo)", color="#64B5F6"];Tutorial[label="Tutorial\n(Learn how to play)", color="#64B5F6"];Plus[label="Plus\n(Bonus powerups! Only with Amazon Prime)", color="#64B5F6"];Feedback[label="Give Feedback", color="#9575CD"];Privacy[label="Privacy & Cookies", color="#9575CD"];About[label="About", color="#9575CD"];Troubleshooting[label="Game not working?", color="#9575CD"];Old[label="Go to the old 2048", color="#9575CD"];Welcome->{Standard, Classic, Tutorial, Plus};Welcome->{Feedback, Privacy, About, Troubleshooting, Old};}
Pretty.c	https://github.com/aartaka/pretty.c	330	synergy20	41931507	digraph G{rankdir=TB;node[shape=box, style=filled, color=lightblue];Main_Idea[label="Main Idea", fillcolor=yellow]; Aspect1[label="Aspect 1"];Aspect2[label="Aspect 2"];Aspect3[label="Aspect 3"]; Detail1[label="Detail"];Detail2[label="Detail"];Detail3[label="Detail"];Detail4[label="Detail"]; Main_Idea->Aspect1;Main_Idea->Aspect2;Main_Idea->Aspect3; Aspect1->Detail1;Aspect1->Detail2;Aspect2->Detail3;Aspect3->Detail4;}
Quantized Llama models with increased speed and a reduced memory footprint	https://ai.meta.com/blog/meta-llama-quantized-lightweight-models/?_fb_noscript=1	235	egnehots	41938473	digraph Llama3_2_Quantization{rankdir=TB;node[shape=box, style=filled, fillcolor=white];edge[color=blue];label="Llama 3.2 Quantization Strategy";Llama3_2[label="Llama 3.2 Models (1B & 3B)", fillcolor=lightblue];Quantization[label="Quantization", fillcolor=yellow];Deployment[label="On-Device/Edge Deployment", fillcolor=lightgreen];Results[label="Performance & Size Reduction", fillcolor=orange];Future[label="Future Developments", fillcolor=lightpink];QAT[label="Quantization-Aware Training (QAT)", fillcolor=lightblue];LoRA[label="LoRA Adaptors", fillcolor=yellow];SpinQuant[label="SpinQuant", fillcolor=lightgreen];Speedup[label="2-4x Speedup", fillcolor=orange];SizeReduction[label="56% Model Size Reduction", fillcolor=orange];MemoryReduction[label="41% Memory Usage Reduction", fillcolor=orange];Arm[label="Arm CPUs", shape=ellipse];Qualcomm[label="Qualcomm SoCs", shape=ellipse];MediaTek[label="MediaTek SoCs", shape=ellipse];Llama3_2->Quantization;Quantization->QAT->LoRA->Deployment;Quantization->SpinQuant->Deployment;Deployment->Results;Results->Speedup;Results->SizeReduction;Results->MemoryReduction;Deployment->Future;Deployment->Arm[label="Optimized"];Deployment->Qualcomm[label="Optimized"];Deployment->MediaTek[label="Optimized"];subgraph cluster_scheme{label="Quantization Scheme";style=filled;color=lightgrey;LinearLayers[label="Linear Layers\n4-bit Groupwise Quantization"];ClassificationLayer[label="Classification Layer\n8-bit Per-Channel Quantization"];Embedding[label="Embedding\n8-bit Per-Channel Quantization"];}LinearLayers->Quantization;ClassificationLayer->Quantization;Embedding->Quantization;}
NetGuard – rootless Android outbound per-app OSS firewall, like LittleSnitch	https://netguard.me/	227	transpute	41931035	digraph G{rankdir=TB;NetGuard[shape=box, style=filled, fillcolor=lightblue, label="NetGuard\nFirewall for Android"]; features[shape=plaintext, label="<<B>Features</B>>"];NoRoot[label="No Root Required"];OpenSource[label="100% Open Source"];Privacy[label="Privacy Focus"];MaterialDesign[label="Material Design"];Tethering[label="Tethering Support"];ScreenOn[label="Allow When Screen On"];BlockRoaming[label="Block When Roaming"];SystemApps[label="Block System Applications"];Notifications[label="Internet Access Notifications"];UsageLog[label="Record Network Usage"];proFeatures[shape=plaintext, label="<<B>Pro Features</B>>"];TrafficLog[label="View Traffic Log"];FilterTraffic[label="Filter Network Traffic"];NewAppNotif[label="New Application Notifications"];SpeedGraph[label="Network Speed Graph"];Themes[label="Custom Themes"];Development[label="Support Development"];Donation[shape=box, style=filled, fillcolor=lightyellow, label="Donation Options"];NetGuard->features[label="Provides"];NetGuard->proFeatures[label="Pro Features"];NetGuard->Donation[label="Support via"];features->{NoRoot, OpenSource, Privacy, MaterialDesign, Tethering, ScreenOn, BlockRoaming, SystemApps, Notifications, UsageLog}; proFeatures->{TrafficLog, FilterTraffic, NewAppNotif, SpeedGraph, Themes, Development}; Donation->{Paypal, BankTransfer, Bitcoin};{rank=same;features;proFeatures}node[shape=box];}
Launch HN: Skyvern (YC S23) – open-source AI agent for browser automations	https://github.com/Skyvern-AI/Skyvern	226	suchintan	41936745	digraph SkyvernWorkflow{rankdir=LR;node[shape=box, style=filled, color=lightblue];edge[color=grey];start[label="Start", shape=oval, color=lightgreen];end[label="End", shape=oval, color=lightcoral];skyvern[label="Skyvern", shape=rectangle, fillcolor=orange]; interactable[label="Interactable\nElement Agent"];navigation[label="Navigation Agent"];dataExtraction[label="Data Extraction Agent"];password[label="Password Agent"];twoFA[label="2FA Agent"];autoComplete[label="Dynamic\nAuto-complete Agent"]; task[label="Task"];workflow[label="Workflow"]; skyvernCloud[label="Skyvern Cloud", shape=rectangle, fillcolor=lightpink]; start->skyvern;skyvern->{interactable, navigation, dataExtraction, password, twoFA, autoComplete};{interactable, navigation, dataExtraction, password, twoFA, autoComplete}->task;task->workflow;workflow->skyvernCloud;skyvernCloud->end;workflow->"Authentication"[label="Requires"];workflow->"Data Extraction"[label="Can include"];workflow->"Form Filling"[label="Supports"];workflow->"File Downloading"[label="Supports"];skyvernCloud->"Managed Cloud"[label="Provides"];skyvernCloud->"Anti-Bot Measures"[label="Includes"];{rank=same;interactable;navigation;dataExtraction;}{rank=same;password;twoFA;autoComplete;} label="Skyvern Workflow Visualization";fontsize=20;node[fontname="Arial"];}
Goodbye from a Linux Community Volunteer	https://lore.kernel.org/netdev/2m53bmuzemamzc4jzk2bj7tli22ruaaqqe34a2shtdtqrd52hp@alifh66en3rj/T/#u	206	ajb	41932225	digraph G{rankdir=LR;node[shape=box, style="rounded"];SergeSemin[label="Serge Semin"];LinuxCommunity[label="Linux Community"];GregKroahHartman[label="Greg Kroah-Hartman"];LinuxMaintainers[label="Linux Maintainers"];OFAC[label="OFAC (Office of Foreign Assets Control)"];LinuxFoundation[label="Linux Foundation"];LegalCompliance[label="Legal Compliance"];PublicStatement[label="Public Statement"];KernelDevelopment[label="Kernel Development"];Sanctions[label="Sanctions"];Contributors[label="Contributors"];Acknowledgment[label="Acknowledgment"]; edge[color=blue];SergeSemin->LinuxCommunity[label="Volunteer"];SergeSemin->LinuxMaintainers[label="Removed from Maintainers List"];LinuxMaintainers->GregKroahHartman[label="Senior Maintainer"];GregKroahHartman->SergeSemin[label="Removed"];LinuxFoundation->LegalCompliance[label="Must Follow"];OFAC->Sanctions[label="Enforces"];Sanctions->LinuxFoundation[label="Compliance Required"];LegalCompliance->PublicStatement[label="Needs"];LinuxCommunity->KernelDevelopment[label="Impacted"];Contributors->SergeSemin[label="Support"];LinuxMaintainers->Acknowledgment[label="Needed"];PublicStatement->LinuxCommunity[label="Demanded"];}
TSMC cuts off client after discovering chips sent to Huawei	https://www.bloomberg.com/news/articles/2024-10-23/tsmc-cuts-off-client-after-discovering-chips-diverted-to-huawei	194	teleforce	41931392	digraph G{rankdir=LR;node[shape=box, style="rounded,filled", color="lightblue2", fontname="Arial"];edge[color="grey50", arrowsize=0.8];TSMC[label="TSMC\n(Taiwan Semiconductor\nManufacturing Co.)", fillcolor="lightpink"];Client[label="Client"];Huawei[label="Huawei\nTechnologies Co.", fillcolor="lightcoral"];US_Sanctions[label="US Sanctions", fillcolor="lightgoldenrod1"];Investigation[label="Investigation", fillcolor="lightgreen"];Notification[label="Notification", fillcolor="lightseagreen"];Discovery[label="Discovery", fillcolor="lightyellow"];Halt_Shipments[label="Halt Shipments", fillcolor="lightsalmon"];TSMC->Client[label=" Supplied Chips"];Client->Huawei[label=" Chips Diverted"];US_Sanctions->Huawei[label=" Sanctions Against"];Discovery->TSMC[label=" Identified Diversion"];TSMC->Halt_Shipments[label=" Action Taken"];TSMC->Investigation[label=" Initiated"];TSMC->Notification[label=" Notified"];Notification->US_Sanctions[label=" to"];Notification->Taipei[label=" to"];}

title	url	points	by	hnId	dot
Study finds that buttons in cars are safer and quicker to use than touchscreens	https://futurism.com/the-byte/study-finds-that-buttons-in-cars-are-safer-and-quicker-to-use-than-touchscreens	466	janandonly	34287800	digraph{rankdir=LR;"Study"->"Buttons in Cars"->"Safer and Quicker"->"Than Touchscreens";"Buttons in Cars"->"Tactility";"Buttons in Cars"->"Permanently Positioned";"Touchscreens"->"Less Safe and Efficient";"Touchscreens"->"Require Navigation";"Study"->"Vi Bilägare Tests";"Vi Bilägare Tests"->"12 Models";"Vi Bilägare Tests"->"Infotainment Tasks";}
Tell HN: Vim users, `:x` is like `:wq` but writes only when changes are made	https://news.ycombinator.com/item?id=34287407	441	manaskarekar	34287407	digraph VimCommands{rankdir=LR;node[shape=box, style=rounded, fontname="Arial", fontsize=12];Start[label="Start", shape=ellipse];Write[label=":w\nWrite File"];WriteOnlyIfChanged[label=":x\nWrite Only If Changed"];Quit[label=":q\nQuit"];WriteAndQuit[label=":wq\nWrite and Quit"];QuitWithoutSaving[label=":q!\nQuit Without Saving"];Encrypt[label=":X\nEncrypt File"];ZZ[label="ZZ\nSave and Quit"];ZQ[label="ZQ\nQuit Without Saving"];Start->Write;Start->WriteOnlyIfChanged;Start->Quit;Start->WriteAndQuit;Start->QuitWithoutSaving;Start->Encrypt;Start->ZZ;Start->ZQ;Write->FileWritten[label="File Saved"];WriteOnlyIfChanged->FileWritten[label="File Saved Only If Changed"];WriteAndQuit->FileWritten[label="File Saved and Quit"];ZZ->FileWritten[label="File Saved and Quit"];Quit->Exited[label="Exited"];QuitWithoutSaving->Exited[label="Exited Without Saving"];ZQ->Exited[label="Exited Without Saving"];Encrypt->FileEncrypted[label="File Encrypted"];FileWritten[shape=ellipse, label="File Written"];FileEncrypted[shape=ellipse, label="File Encrypted"];Exited[shape=ellipse, label="Exited"];}
Epochalypse	https://www.epochalypse.today/	369	pabs3	34284759	digraph{"Unix Epoch Time"->"90.38% Exhausted";"90.38% Exhausted"->"4782 days until 20:45:52 UTC on 13 December 1901";"4782 days until 20:45:52 UTC on 13 December 1901"->"[Explanation](https://hertig.blog/posts/epochalypse - when - computers - travel - back - in - time/)";}
Production Twitter on one machine? 100Gbps NICs and NVMe are fast	https://thume.ca/2023/01/02/one-machine-twitter/	356	trishume	34291191	digraph{subgraph cluster_TwitterFeatures{label="Twitter Features" "Timeline and tweet distribution logic"->"HTTP(S) request serving"->"Image serving"->"Video, search, ads, notifications"->"Historical tweet and image storage"->"ML - based timeline"}subgraph cluster_SystemDesign{label="System Design" "Core Tweet Distribution"->"How big is Twitter?"->"Hot set in RAM, rest on NVMe"->"My Prototype"->"Can the prototype meet the real load?"->"Directly serving web requests"->"Images: Kinda!?"->"Features that probably don't fit and are hard to estimate"->"Algorithmic Timelines / ML"->"Bandwidth costs: They can be super expensive or free!"->"How cheaply could you serve Twitter: Pricing it out"}"My Prototype"->"Timeline and tweet distribution logic" "Can the prototype meet the real load?"->"HTTP(S) request serving" "Directly serving web requests"->"Image serving" "Images: Kinda!?"->"Video, search, ads, notifications" "Features that probably don't fit and are hard to estimate"->"Historical tweet and image storage" "Algorithmic Timelines / ML"->"ML - based timeline" "Bandwidth costs: They can be super expensive or free!"->"Directly serving web requests" "How cheaply could you serve Twitter: Pricing it out"->"All other features"}
The beauty of CGI and simple design	https://rubenerd.com/the-beauty-of-cgi-and-simple-design-by-hales/	292	susam	34286622	digraph{rankdir=TB;node[shape=box];"Hales' CGI Post"->"CGI Advantages"->"No Dependencies"->"Works with Any Language"->"Zero External Configuration";"Hales' CGI Post"->"Conclusion"->"Avoid Professional Syndrome";"Hales' CGI Post"->"Author's Experience"->"Perl CGI Script"->"Learned HTTP, HTML, Templates"->"MVC without Realising";"Author's Experience"->"Impasse in Projects"->"Premature Optimisation in Life";"Author's Experience"->"Kubernetes Analogy";}
Show HN: Futurecoder – A free interactive Python course for coding beginners	https://futurecoder.io/	274	alexmojaki	34289581	digraph{"Futurecoder"->"Learn Python from scratch";"Futurecoder"->"Redefines interactive learning";"Futurecoder"->"100% Free & Open Source";"Futurecoder"->"Designed with care for beginners";"Futurecoder"->"See what others think";"Futurecoder"->"Take a peek inside";"Futurecoder"->"Watch a demo of the features and benefits";"Futurecoder"->"Want to receive updates about futurecoder?";"Futurecoder"->"About";"Learn Python from scratch"->"Start learning";"Learn Python from scratch"->"Just code";"See what others think"->"r/LearnProgramming";"See what others think"->"r/InternetIsBeautiful";"See what others think"->"GitHub";"Take a peek inside"->"Fully Interactive";"Take a peek inside"->"Easy Debugging";"Take a peek inside"->"Enhanced Error Messages";"Take a peek inside"->"Parsons Problems";"Take a peek inside"->"Solution Breadcrumbs";"About"->"Revolutionise computing education";"About"->"Make the best learning resource possible";"About"->"Allow anyone to learn programming on their own";"About"->"Interested in contributing code or course content?";"About"->"Contact Us";}
The i3-gaps project has been merged with i3	https://github.com/Airblader/i3	222	harporoeder	34293010	digraph i3_gaps_overview{rankdir=LR;node[shape=box, style=rounded, fontname="Arial", fontsize=10];edge[fontname="Arial", fontsize=10];"i3 Window Manager"[label="i3 Window Manager", color=blue, fontcolor=blue];"i3-gaps"[label="i3-gaps", color=green, fontcolor=green];"Merged into i3"[label="Merged into i3", color=red, fontcolor=red];"Gaps"[label="Gaps", color=orange, fontcolor=orange];"Smart Gaps"[label="Smart Gaps", color=orange, fontcolor=orange];"Smart Borders"[label="Smart Borders", color=orange, fontcolor=orange];"Bar Height"[label="Bar Height", color=orange, fontcolor=orange];"i3 Window Manager"->"i3-gaps"[label="Forked"];"i3-gaps"->"Merged into i3"[label="Merged"];"i3-gaps"->"Gaps"[label="Added"];"i3-gaps"->"Smart Gaps"[label="Added"];"i3-gaps"->"Smart Borders"[label="Added"];"i3-gaps"->"Bar Height"[label="Added"];}
Rsync.net warrant canary	https://www.rsync.net/resources/notices/canary.txt	220	losfair	34287964	digraph WarrantCanary{rankdir=TB;node[shape=box, style=rounded, fontname="Arial", fontsize=12];edge[fontname="Arial", fontsize=10];"rsync.net Warrant Canary"[shape=ellipse, style=filled, color=lightblue];"Secret Warrants"[label="Existing and Proposed Laws\n(e.g., US Patriot Act)"];"Criminal Penalties for Disclosure"[label="Criminal Penalties for Revealing\nWarrants, Searches, or Seizures"];"rsync.net Compliance"[label="rsync.net and its Principals\nWill Comply with Warrants"];"Warrant Canary Mechanism"[label="Weekly Cryptographically Signed Message"];"Canary Declaration"[label="Declaration: No Warrants Served,\nNo Searches or Seizures"];"News Clip for Date Verification"[label="Cut and Paste Headline\nfrom Major News Source"];"Special Note"[label="Note: Messages Cease Being Updated\nor Removed"];"Public Key"[label="Public Key Available\n(https://www.rsync.net/resources/pubkey.txt)"];"Current Message"[label="Current Signed Message\n(Example: 2024-12-09)"];"rsync.net Warrant Canary"->"Secret Warrants";"Secret Warrants"->"Criminal Penalties for Disclosure";"Criminal Penalties for Disclosure"->"rsync.net Compliance";"rsync.net Compliance"->"Warrant Canary Mechanism";"Warrant Canary Mechanism"->"Canary Declaration";"Warrant Canary Mechanism"->"News Clip for Date Verification";"Warrant Canary Mechanism"->"Special Note";"Warrant Canary Mechanism"->"Public Key";"Warrant Canary Mechanism"->"Current Message";}
The Safari bug that never was (2022)	https://obyford.com/posts/the-safari-bug-that-never-was/	219	robin_reala	34289328	digraph SafariBug{rankdir=TB;node[shape=box, style=rounded, fontname="Arial", fontsize=12];Start[label="Ian's Slack Message\n(Oct 2021)", shape=ellipse];SafariPreview[label="Safari Technology Preview", URL="https://developer.apple.com/safari/technology-preview/"];GOVUK[label="GOV.UK Design System", shape=folder];BugObservation[label="Bug Observation:\nText Wrapping Unnecessarily"];Importance[label="Why Fixing the Bug was Important", URL="https://obyford.com/posts/the-safari-bug-that-never-was/#why-getting-the-bug-fixed-was-important"];Understanding[label="Understanding the Bug", URL="https://obyford.com/posts/the-safari-bug-that-never-was/#understanding-the-bug"];Reporting[label="Reporting the Bug", URL="https://obyford.com/posts/the-safari-bug-that-never-was/#reporting-the-bug"];Fix[label="Bug Fixed in WebKit", URL="https://bugs.webkit.org/show_bug.cgi?id=232939"];Cause[label="What Caused the Bug", URL="https://obyford.com/posts/the-safari-bug-that-never-was/#what-caused-the-bug"];Start->SafariPreview;SafariPreview->GOVUK;GOVUK->BugObservation;BugObservation->Importance;BugObservation->Understanding;Understanding->Reporting;Reporting->Fix;Fix->Cause;{rank=same;SafariPreview GOVUK}{rank=same;BugObservation Importance Understanding}{rank=same;Reporting Fix}}
Post-processing is ruining iPhone photos	https://9to5mac.com/2023/01/06/mkbhd-post-processing-ruining-iphone-photos/	218	retskrad	34290470	digraph{"MKBHD Smartphone Awards"->"iPhone 14 Pro Camera";"MKBHD Blind Camera Test"->"iPhone 14 Pro Camera";"iPhone 14 Pro Camera"->"Image Post - Processing";"Image Post - Processing"->"Apple's Smart HDR";"Apple's Smart HDR"->"iPhone Camera Flaws";"iPhone Camera Flaws"->"User Option Request";"MKBHD Smartphone Awards"[label="2022 Awards"];"MKBHD Blind Camera Test"[label="2022 Blind Test"];"iPhone 14 Pro Camera"[label="Won Best Camera System"];"Image Post - Processing"[label="Exaggerated in Smartphones"];"Apple's Smart HDR"[label="Combines Multiple Photos"];"iPhone Camera Flaws"[label="Unnatural Photos"];"User Option Request"[label="Turn off Post - Processing"];}

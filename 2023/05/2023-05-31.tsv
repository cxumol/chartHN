title	url	points	by	hnId	dot
I criticized Amazon’s policies in a blog – their lawyers have subpoenaed me	https://twitter.com/Molson_Hart/status/1663582588210905091	820	graeme	36127800	digraph{rankdir=LR;"Welcome to x.com!"->"URL change";"URL change"->"Privacy & data protection settings remain the same";"Privacy & data protection settings remain the same"->"Privacy Policy: https://x.com/en/privacy";}
JMAP – a modern email open standard	https://jmap.io/	624	tambourine_man	36127703	digraph JMAP_IMAP{node[shape=box];JMAP[label="JMAP (JSON Meta Application Protocol)" style=filled fillcolor=lightblue];IMAP[label="IMAP (Internet Message Access Protocol)" style=filled fillcolor=lightgray];subgraph cluster_advantages{label="Advantages of JMAP over IMAP";stateless[label="Stateless Protocol"];immutable_ids[label="Immutable IDs"];flexible_commands[label="Flexible Command Batching"];efficient_updates[label="Efficient Update Fetching"];flood_control[label="Flood Control"];easy_parsing[label="No Custom Parser Required"];backward_compatible[label="Backward Compatibility"];unified_protocol[label="Unified Protocol for Email"];push_mechanism[label="Push Mechanism"];end_to_end_encryption[label="End-to-End Encryption Considerations"];transport_agnostic[label="Transport Agnostic"];}JMAP->stateless;JMAP->immutable_ids;JMAP->flexible_commands;JMAP->efficient_updates;JMAP->flood_control;JMAP->easy_parsing;JMAP->backward_compatible;JMAP->unified_protocol;JMAP->push_mechanism;JMAP->end_to_end_encryption;JMAP->transport_agnostic;subgraph cluster_comparison{label="Comparison of JMAP and IMAP";usability[label="Usability & Consistency"];performance[label="Performance Optimization"];mobile_friendly[label="Mobile Friendly"];error_handling[label="Improved Error Handling"];}JMAP->usability;JMAP->performance;JMAP->mobile_friendly;JMAP->error_handling;IMAP->usability;IMAP->performance;IMAP->mobile_friendly;IMAP->error_handling;cluster_advantages[style=dashed];cluster_comparison[style=dashed];}
Federal judge: Border searches of cell phones require a warrant	https://www.eff.org/deeplinks/2023/05/federal-judge-makes-history-holding-border-searches-cell-phones-require-warrant	584	panarky	36130166	digraph G{node[shape=box];Title[label="Federal Judge Makes History\nHolding That Border Searches\nof Cell Phones Require a Warrant" shape=ellipse];Background[label="Background" shape=rect];Case[label="Case: United States v. Smith\n(S.D.N.Y. May 11, 2023)" shape=rect];Ruling[label="Ruling: Warrant Required\nfor Cell Phone Searches at Border" shape=rect];EFF[label="EFF's Advocacy\nfor Privacy Rights" shape=rect];Privacy[label="Privacy Concerns\nwith Digital Data" shape=rect];GovernmentInterest[label="Government's Interest\nin Border Searches" shape=rect];Riley[label="Riley v. California\n(2014) Balancing Test" shape=rect];Implications[label="Implications of the Ruling\nfor Future Cases" shape=rect];Title->Background;Background->Case;Case->Ruling;Ruling->EFF;EFF->Privacy;EFF->GovernmentInterest;Ruling->Riley;Ruling->Implications;Privacy->"Significant Privacy Interests\nin Digital Data";GovernmentInterest->"Weak Government Interest\nin Searching Digital Data";Riley->"Applied Balancing Test\nfrom Riley to Border Context";}
Rust has been forked to the Crab Language	https://github.com/crablang/crab	475	max_	36122270	digraph CrabLang{node[shape=box, style=filled, fillcolor="#f9f9f9", fontcolor="#333"]; subgraph cluster_main{label="Crab Programming Language";style=filled;fillcolor="#e0e0e0"; repository[label="Source Code Repository\n(Compiler, Standard Library, Documentation)"];quick_start[label="Quick Start\n(Installation Command)"];install_source[label="Installing from Source\n(Using x.py)"];dependencies[label="Dependencies\n(Required Tools)"];build_unix[label="Building on Unix-like Systems"];build_windows[label="Building on Windows"];configure_make[label="Configure and Make\n(Alternative Build System)"];building_docs[label="Building Documentation"];getting_help[label="Getting Help\n(Community Support)"];contributing[label="Contributing\n(Contribution Guidelines)"];license[label="License\n(MIT and Apache License)"];} repository->quick_start;repository->install_source;repository->dependencies;install_source->build_unix;install_source->build_windows;build_unix->configure_make;build_windows->configure_make;build_unix->building_docs;build_windows->building_docs;getting_help->contributing;contributing->license;}
I gave commit rights to someone I didn't know (2016)	https://tech.davis-hansson.com/p/clickbait/	367	love2read	36120972	digraph{"Initial Release of django - money"->"Read blog post about trusting OSS contributors";"Read blog post about trusting OSS contributors"->"Received large PR for django - money";"Received large PR for django - money"->"Gave contributor commit rights";"Gave contributor commit rights"->"Years later, discovered project's popularity";"Years later, discovered project's popularity"->"Project being maintained and growing";"Project being maintained and growing"->"Moved project to its own org";}
Purely Functional Data Structures (1996) [pdf]	https://www.cs.cmu.edu/~rwh/students/okasaki.pdf	311	debanjan16	36123651	digraph Thesis{rankdir=LR;node[shape=rectangle, style=filled, fillcolor=lightgray];Okasaki[label="Chris Okasaki\nPhD Thesis\n1996"];FunctionalStructures[label="Functional Data Structures"];LazyEvaluation[label="Lazy Evaluation"];Amortization[label="Amortization"];Persistence[label="Persistence"];ProgrammingLanguages[label="Programming Language Design"];Techniques[label="Design Techniques"];DataStructures[label="Specific Data Structures"];Okasaki->FunctionalStructures;Okasaki->LazyEvaluation;Okasaki->Amortization;Okasaki->Persistence;Okasaki->ProgrammingLanguages;FunctionalStructures->Techniques;LazyEvaluation->Techniques;Amortization->Techniques;Persistence->Techniques;Techniques->DataStructures;LazyEvaluation->Amortization[label="reconciles"];Amortization->Persistence[label="reconciles"];Persistence->FunctionalStructures[label="enables"];ProgrammingLanguages->FunctionalStructures[label="influences"];DataStructures->Queues[label="Queues"];DataStructures->Deques[label="Deques"];DataStructures->Lists[label="Lists"];DataStructures->Heaps[label="Heaps"];DataStructures->RandomAccess[label="Random-Access Lists"];subgraph cluster_0{label="Specific Data Structures";color=lightgrey;style=dashed;Queues[label="Queues"];Deques[label="Double-Ended Queues"];Lists[label="Catenable Lists"];Heaps[label="Heaps"];RandomAccess[label="Random-Access Lists"];}}
How to Stare at Your Phone Without Losing Your Soul	https://simone.org/tracking-screen-time/	300	memorable	36120457	digraph PhoneUsage{rankdir=LR; A[label="Screen Time Doesn't Matter" shape=box style=filled fillcolor=lightblue];B[label="Is your phone a helpful assistant or a demanding boss?" shape=ellipse];C[label="Healthy Screen Time = No Screen Time" shape=ellipse];D[label="Quality over Quantity" shape=ellipse];E[label="Conscious Decisions Required" shape=ellipse];F[label="Parameters to Evaluate Quality" shape=box style=filled fillcolor=lightyellow];G[label="Tracking Time is Deceptive" shape=ellipse];A->B;A->C;A->D;D->E;D->F;F->"Does this app do its job and then step aside?";F->"Does it linger in your brain?";F->"Did I summon this app?";A->G;H[label="Self-awareness in tech usage" shape=ellipse];I[label="Introspection about phone usage" shape=ellipse];E->H;H->I;}
Statement on AI Risk	https://www.safe.ai/statement-on-ai-risk	278	zone411	36123082	digraph AI_Researchers{rankdir=LR;node[shape=box];subgraph cluster_academia{label="Academics";style=dashed;Geoffrey_Hinton[label="Geoffrey Hinton\nEmeritus Professor, University of Toronto"];Yoshua_Bengio[label="Yoshua Bengio\nProfessor, U. Montreal/Mila"];Dawn_Song[label="Dawn Song\nProfessor, UC Berkeley"];Stuart_Russell[label="Stuart Russell\nProfessor, UC Berkeley"];Ilya_Sutskever[label="Ilya Sutskever\nCo-Founder, OpenAI"];David_Silver[label="David Silver\nProfessor, Google DeepMind"];Martin_Hellman[label="Martin Hellman\nProfessor Emeritus, Stanford"];Anca_Dragan[label="Anca Dragan\nAssociate Professor, UC Berkeley"];Yi_Zeng[label="Yi Zeng\nDirector, Brain-inspired Cognitive AI Lab"];Andrew_Barto[label="Andrew Barto\nProfessor Emeritus, UMass"];}subgraph cluster_industry{label="Industry Leaders";style=dotted;Demis_Hassabis[label="Demis Hassabis\nCEO, Google DeepMind"];Dario_Amodei[label="Dario Amodei\nCEO, Anthropic"];Kevin_Scott[label="Kevin Scott\nCTO, Microsoft"];Lila_Ibrahim[label="Lila Ibrahim\nCOO, Google DeepMind"];Shane_Legg[label="Shane Legg\nChief AGI Scientist, Google DeepMind"];Mustaf_Suleyman[label="Mustafa Suleyman\nCEO, Inflection AI"];Emad_Mostaque[label="Emad Mostaque\nCEO, Stability AI"];Daniel_Amodei[label="Daniela Amodei\nPresident, Anthropic"];}subgraph cluster_government{label="Government & Policy";style=dashed;Ted_Lieu[label="Ted Lieu\nCongressman, US House of Representatives"];Christine_Parthemore[label="Christine Parthemore\nCEO, Council on Strategic Risks"];Andy_Weber[label="Andy Weber\nFormer U.S. Assistant Secretary of Defense"];Bill_McKibben[label="Bill McKibben\nSchumann Distinguished Scholar"];Angela_Kane[label="Angela Kane\nVP, International Institute for Peace"];}Geoffrey_Hinton->Yoshua_Bengio;Geoffrey_Hinton->Ilya_Sutskever;Yoshua_Bengio->Demis_Hassabis;Ilya_Sutskever->Dario_Amodei;Dario_Amodei->Shane_Legg;Ted_Lieu->Christine_Parthemore;Christine_Parthemore->Andy_Weber;Martin_Hellman->Andrew_Barto;Stuart_Russell->Dawn_Song;subgraph cluster_notables{label="Notable Contributors";style=dotted;Albert_Efimov[label="Albert Efimov\nChief of Research, Russian AI"];Alvin_Wang_Graylin[label="Alvin Wang Graylin\nChina President, HTC"];James_Manyika[label="James Manyika\nSVP, Google-Alphabet"];Eric_Horvitz[label="Eric Horvitz\nChief Scientist, Microsoft"];David_Chalmers[label="David Chalmers\nProfessor of Philosophy, NYU"];}}
Ask HN: Where have you found community outside of work?	https://news.ycombinator.com/item?id=36128618	242	plemer	36128618	digraph HackerNewsCommunity{layout="dot";rankdir="TB";HackerNews[label="Hacker News\n(Ask HN: Where have you found community outside of work?)", shape=box, style=filled, color=lightblue];Family[label="Family & Neighbors", shape=ellipse];Hobbies[label="Hobbies", shape=ellipse];Volunteering[label="Volunteering", shape=ellipse];Sports[label="Sports & Fitness", shape=ellipse];Religion[label="Religious Groups", shape=ellipse];HackerNews->Family;HackerNews->Hobbies;HackerNews->Volunteering;HackerNews->Sports;HackerNews->Religion;Family->Neighbors[label="Neighborhood gatherings"];Family->Parenting[label="Parent networks"];Family->BlockParties[label="Block parties"];Hobbies->Music[label="Choirs, Bands"];Hobbies->Gaming[label="Boardgames, MTG"];Hobbies->Arts[label="Crafting, Art groups"];Hobbies->TechMeetups[label="Hackerspaces, Tech events"];Hobbies->Gardening[label="Community gardens"];Hobbies->Writing[label="Book clubs"];Volunteering->CommunityService[label="Food pantries, shelters"];Volunteering->SAR[label="Search and Rescue"];Volunteering->Environmental[label="Trail building, cleanups"];Volunteering->Teaching[label="Mentorship, Tutoring"];Sports->Running[label="Running clubs"];Sports->Climbing[label="Climbing gyms"];Sports->Biking[label="Cycling groups"];Sports->MartialArts[label="Martial arts, BJJ"];Sports->Frisbee[label="Ultimate Frisbee"];Sports->Pickleball[label="Pickleball"];Sports->Yoga[label="Yoga studios"];Religion->Church[label="Churches"];Religion->Synagogue[label="Synagogues"];Religion->Meditation[label="Meditation groups"];Religion->Spirituality[label="Spiritual groups"];Family[style=filled, color=lightyellow];Hobbies[style=filled, color=lightgreen];Volunteering[style=filled, color=lightpink];Sports[style=filled, color=lightsalmon];Religion[style=filled, color=lightgray];}
Show HN: I open sourced the QR designer from my failed startup	https://github.com/kochrt/qr-designer	232	koch	36128082	digraph QRDesigner{rankdir=LR;node[shape=rectangle, style=filled, color=lightgrey, fontname="Helvetica"]; GitHub[label="GitHub" shape=ellipse, style=filled, color=lightblue];QRDesigner[label="kochrt/qr-designer" shape=ellipse, style=filled, color=lightgreen];License[label="License: MIT" shape=ellipse, style=filled, color=lightyellow];Stars[label="Stars: 2.7k" shape=ellipse, style=filled, color=lightcoral];Forks[label="Forks: 118" shape=ellipse, style=filled, color=lightpink];Issues[label="Issues: 4" shape=ellipse, style=filled, color=lightcyan];PullRequests[label="Pull Requests: 0" shape=ellipse, style=filled, color=lightgoldenrod];Actions[label="Actions" shape=ellipse, style=filled, color=lightseagreen];Projects[label="Projects: 0" shape=ellipse, style=filled, color=lightsteelblue];Security[label="Security" shape=ellipse, style=filled, color=lightcoral];Insights[label="Insights" shape=ellipse, style=filled, color=lightyellowgreen]; GitHub->QRDesigner;QRDesigner->License;QRDesigner->Stars;QRDesigner->Forks;QRDesigner->Issues;QRDesigner->PullRequests;QRDesigner->Actions;QRDesigner->Projects;QRDesigner->Security;QRDesigner->Insights; Features[label="Features" shape=box, style=filled, color=lightgrey];Prerequisites[label="Prerequisites" shape=box, style=filled, color=lightgrey];Installing[label="Installing and Running" shape=box, style=filled, color=lightgrey];Examples[label="Examples" shape=box, style=filled, color=lightgrey];About[label="About" shape=box, style=filled, color=lightgrey]; QRDesigner->Features;QRDesigner->Prerequisites;QRDesigner->Installing;QRDesigner->Examples;QRDesigner->About; Features->{"Design QR codes", "No error correction"};Prerequisites->{"Nuxt v2 app", "25 characters URL"};Installing->{"Node v16", "npm i", "npm run generate", "npm run start"};Examples->{"Example 1", "Example 2", "Example 3", "Example 4"};About->{"Novel method", "No error correction"};}
